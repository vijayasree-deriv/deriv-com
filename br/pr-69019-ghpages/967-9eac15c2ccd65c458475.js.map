{"version":3,"file":"967-9eac15c2ccd65c458475.js","mappings":"yLA6CMA,EAAaC,EAAAA,QAAAA,IAAAA,WAAH,yEAAGA,CAAH,yCAIVC,EAAcD,EAAAA,QAAAA,IAAAA,WAAH,0EAAGA,CAAH,4JAKJE,EAAAA,EAAAA,QAGAA,EAAAA,EAAAA,QAGAA,EAAAA,EAAAA,QAIAA,EAAAA,EAAAA,SAmBPC,GAAeH,EAAAA,EAAAA,SAAOI,EAAAA,IAAVC,WAAA,2EAAGL,CAAH,4EAfH,SAAC,GAAkB,IAAhBM,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IACfC,EAAa,OACjB,OAAQF,GACJ,KAAK,EACDE,EAAa,OACb,MACJ,KAAK,EACDA,EAAaD,EAAM,SAAWC,EAGtC,OAAOC,EAAAA,EAAAA,KAAP,oBACkBD,KASTN,EAAAA,EAAAA,SAIPQ,EAAgBV,EAAAA,QAAAA,GAAAA,WAAH,4EAAGA,CAAH,kJAOFE,EAAAA,EAAAA,SAUXS,EAAWX,EAAAA,QAAAA,GAAAA,WAAH,uEAAGA,CAAH,kBACC,SAACY,GAAD,OAAYA,EAAMC,iBAAmB,QAAU,UAGxDC,GAAad,EAAAA,EAAAA,SAAOe,EAAAA,IAAVV,WAAA,yEAAGL,CAAH,iHAUVgB,EAAahB,EAAAA,QAAAA,IAAAA,WAAH,yEAAGA,CAAH,2GA0EhB,UA/DyB,SAAC,GAOI,IAN1BiB,EAMyB,EANzBA,IACAC,EAKyB,EALzBA,KACAC,EAIyB,EAJzBA,eACAC,EAGyB,EAHzBA,cACAC,EAEyB,EAFzBA,cACAC,EACyB,EADzBA,MAEA,OACIC,EAAAA,QAAAA,cAACxB,EAAD,CAAYyB,IAAKP,GACbM,EAAAA,QAAAA,cAACtB,EAAD,KACIsB,EAAAA,QAAAA,cAACpB,EAAD,CAAcsB,KAAK,iBAAiBP,EAAKQ,UACxCR,EAAKS,SAASC,KAAI,SAACC,EAAIC,GACpB,IAAMC,EACFF,EAAGH,YAAYP,GAAkBA,EAAeU,EAAGH,UAAUM,YAC3DnB,EAAmBiB,EAAO,GAAKC,EAC/BE,EAAaf,EAAKS,SAASO,OAAS,EACpCC,GAAsBJ,GAAwBE,GAAuB,IAATH,EAC5DM,EACFL,GAAwBE,GAAcH,IAASZ,EAAKS,SAASO,OAAS,EACpEG,EAAahB,GAAiBQ,EAAGS,SAAWT,EAAGS,SAAWT,EAAGU,MAE7DC,EAAanB,GAAiBQ,EAAGY,SAAWZ,EAAGY,SAAWZ,EAAGa,MAEnE,OACInB,EAAAA,QAAAA,cAACb,EAAD,CAAec,IAAKM,GAChBP,EAAAA,QAAAA,cAACZ,EAAD,CAAUE,iBAAkBA,GACxBU,EAAAA,QAAAA,cAACT,EAAD,CACI6B,IAAIC,EAAAA,EAAAA,IACA1B,EAAKQ,SAASd,MAAMiC,eACpBL,EACAlB,IAGHe,KAIPF,GAAsBC,IACpBb,EAAAA,QAAAA,cAAAA,KAAAA,KACIA,EAAAA,QAAAA,cAACP,EAAD,CAAY8B,QAAS,kBAAM1B,EAAcS,EAAGH,YACvCS,EACGZ,EAAAA,QAAAA,cAACwB,EAAAA,GAAD,CACIF,eAAe,4BACfG,WAAY,CAACzB,EAAAA,QAAAA,cAAAA,IAAAA,CAAGC,IAAK,OAGzBD,EAAAA,QAAAA,cAACwB,EAAAA,GAAD,CACIF,eAAe,8BACfG,WAAY,CAACzB,EAAAA,QAAAA,cAAAA,IAAAA,CAAGC,IAAK","sources":["webpack://deriv-com/./src/pages/help-centre/_article-component.tsx"],"sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { convertToHash } from './_utility'\nimport { Header } from 'components/elements'\nimport { LocalizedLink, Localize } from 'components/localization'\nimport device from 'themes/device'\n\ntype StyledProps = {\n    should_show_item?: boolean\n}\n\ntype TranslateTextType = {\n    translate_text: string\n}\n\ntype CategoryType = {\n    props: TranslateTextType\n    translate_text: string\n    is_expanded: boolean\n    is_eu_country?: boolean\n}\n\ntype ArticleType = {\n    category: string\n    label: string\n    title: CategoryType\n    title_eu: boolean\n    label_eu: boolean\n}\n\ntype ItemType = {\n    category: CategoryType\n    articles: ArticleType[]\n}\n\ntype ArticleComponentProps = {\n    idx: number\n    id: number\n    item: ItemType\n    all_categories: CategoryType\n    toggleArticle: (arg: string) => void\n    is_eu_country: boolean\n    param: string\n}\n\nconst ArticleDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n`\nconst ListWrapper = styled.div`\n    margin-right: 2.4rem;\n    width: 35rem;\n    line-height: 1.5;\n\n    @media ${device.laptopL} {\n        width: 30rem;\n    }\n    @media ${device.laptopM} {\n        width: 26rem;\n    }\n    @media ${device.tabletS} {\n        width: auto;\n    }\n\n    @media ${device.tabletL} {\n        padding-top: 3.55rem;\n    }\n`\nconst margin = ({ row, col }) => {\n    let margin_top = '4rem'\n    switch (row) {\n        case 0:\n            margin_top = '8rem'\n            break\n        case 1:\n            margin_top = col ? '7.2rem' : margin_top\n            break\n    }\n    return css`\n        margin-top: ${margin_top};\n    `\n}\n\nconst StyledHeader = styled(Header)`\n    font-size: 2.4rem;\n    margin-bottom: 1.6rem;\n    ${margin};\n\n    @media ${device.mobileL} {\n        margin-top: 40px;\n    }\n`\nconst ListNoBullets = styled.ul`\n    margin-bottom: 1.6rem;\n    list-style: none;\n\n    li {\n        max-width: 38.4rem;\n\n        @media ${device.tabletS} {\n            max-width: 100%;\n            width: 100%;\n        }\n    }\n    > *:not(:last-child) {\n        padding-bottom: 1.6rem;\n    }\n`\n\nconst ShowItem = styled.li<StyledProps>`\n    display: ${(props) => (props.should_show_item ? 'block' : 'none')};\n`\n\nconst StyledLink = styled(LocalizedLink)`\n    text-decoration: none;\n    color: var(--color-black-3);\n    font-size: 16px;\n\n    :hover {\n        color: red;\n        text-decoration: underline;\n    }\n`\nconst StyledView = styled.div`\n    text-decoration: none;\n    color: var(--color-red);\n    font-size: 16px;\n    font-weight: normal;\n\n    :hover {\n        cursor: pointer;\n    }\n`\n\nconst ArticleComponent = ({\n    idx,\n    item,\n    all_categories,\n    toggleArticle,\n    is_eu_country,\n    param,\n}: ArticleComponentProps) => {\n    return (\n        <ArticleDiv key={idx}>\n            <ListWrapper>\n                <StyledHeader type=\"section-title\">{item.category}</StyledHeader>\n                {item.articles.map((ar, idxb) => {\n                    const category_is_expanded =\n                        ar.category in all_categories && all_categories[ar.category].is_expanded\n                    const should_show_item = idxb < 3 || category_is_expanded\n                    const can_expand = item.articles.length > 3\n                    const should_show_expand = !category_is_expanded && can_expand && idxb === 3\n                    const should_show_collapse =\n                        category_is_expanded && can_expand && idxb === item.articles.length - 1\n                    const title_type = is_eu_country && ar.title_eu ? ar.title_eu : ar.title\n\n                    const label_type = is_eu_country && ar.label_eu ? ar.label_eu : ar.label\n\n                    return (\n                        <ListNoBullets key={idxb}>\n                            <ShowItem should_show_item={should_show_item}>\n                                <StyledLink\n                                    to={convertToHash(\n                                        item.category.props.translate_text,\n                                        label_type,\n                                        param,\n                                    )}\n                                >\n                                    {title_type}\n                                </StyledLink>\n                            </ShowItem>\n\n                            {(should_show_expand || should_show_collapse) && (\n                                <li>\n                                    <StyledView onClick={() => toggleArticle(ar.category)}>\n                                        {should_show_expand ? (\n                                            <Localize\n                                                translate_text=\"<0>View all questions</0>\"\n                                                components={[<p key={0} />]}\n                                            />\n                                        ) : (\n                                            <Localize\n                                                translate_text=\"<0>View fewer questions</0>\"\n                                                components={[<p key={0} />]}\n                                            />\n                                        )}\n                                    </StyledView>\n                                </li>\n                            )}\n                        </ListNoBullets>\n                    )\n                })}\n            </ListWrapper>\n        </ArticleDiv>\n    )\n}\n\nexport default ArticleComponent\n"],"names":["ArticleDiv","styled","ListWrapper","device","StyledHeader","Header","withConfig","row","col","margin_top","css","ListNoBullets","ShowItem","props","should_show_item","StyledLink","LocalizedLink","StyledView","idx","item","all_categories","toggleArticle","is_eu_country","param","React","key","type","category","articles","map","ar","idxb","category_is_expanded","is_expanded","can_expand","length","should_show_expand","should_show_collapse","title_type","title_eu","title","label_type","label_eu","label","to","convertToHash","translate_text","onClick","Localize","components"],"sourceRoot":""}