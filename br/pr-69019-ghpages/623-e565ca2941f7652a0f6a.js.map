{"version":3,"file":"623-e565ca2941f7652a0f6a.js","mappings":"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","sources":["webpack://deriv-com/./src/pages/deriv-go/components/_tabs.js","webpack://deriv-com/./src/pages/deriv-go/_start-deriv-go.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { css, keyframes } from 'styled-components'\nimport { Flex, Show } from 'components/containers'\nimport { Text } from 'components/elements'\nimport device from 'themes/device'\n\nconst TabContent = styled.div`\n    flex: 1;\n    width: 100%;\n\n    & .content-wrapper {\n        width: 287px;\n        height: 576px;\n        @media ${device.tabletL} {\n            width: 192px;\n            height: 386px;\n        }\n    }\n`\n\nconst TabButton = styled(Flex)`\n    position: relative;\n    z-index: 2;\n    flex-direction: column;\n    justify-content: center;\n    padding-top: 40px;\n    width: 428px;\n    cursor: pointer;\n    margin-left: 9rem;\n\n    @media ${device.tabletL} {\n        width: fit-content;\n        padding-top: 10px;\n        margin-left: 0;\n    }\n`\n\nconst TabList = styled.div`\n    max-width: 100%;\n    ${(props) =>\n        props.is_reverse\n            ? css`\n                  margin-left: 2.4rem;\n              `\n            : css`\n                  margin-right: 2.4rem;\n              `}\n`\n\nconst TabListWrapper = styled.div`\n    max-width: 28.2rem;\n    display: flex;\n    flex-direction: column;\n\n    @media ${device.tabletL} {\n        max-width: 100%;\n        margin: 0;\n    }\n`\nconst animateTab = keyframes`\n    0% {opacity:0;}\n    100% {opacity:1;}\n\n`\n\nconst TextLabel = styled(Text)`\n    color: ${(props) => (props.selected ? 'rgba(51, 51, 51, 1)' : 'rgba(153, 153, 153, 1)')};\n    font-size: 32px;\n    animation: ${animateTab} 2s;\n\n    @media ${device.tabletL} {\n        font-size: 24px;\n    }\n`\n\nconst TextDesc = styled(Text)`\n    display: ${(props) => (!props.selected ? 'none' : '')};\n    font-size: 24px;\n    animation: ${animateTab} 2s;\n\n    @media ${device.tabletL} {\n        font-size: 18px;\n    }\n`\n\nconst Content = styled(Flex)`\n    display: grid;\n    justify-content: center;\n    padding-left: 16rem;\n    padding-top: 60px;\n    @media ${device.tabletL} {\n        padding-top: 24px;\n        padding-left: 0;\n    }\n`\n\nconst CarouselDot = styled.div`\n    height: 12px;\n    align-self: center;\n    width: 12px;\n    border-radius: 50%;\n    border: ${(props) => (props.selected ? 'none' : '1px solid #000000')};\n    margin-bottom: 16px;\n    background-color: ${(props) =>\n        props.selected ? 'rgba(255, 68, 79, 1)' : 'rgba(248, 250, 251, 1)'};\n    @media ${device.tabletL} {\n        display: none;\n    }\n`\nconst CarouselContainer = styled.div`\n    height: 80px;\n    align-self: center;\n    margin-right: 36px;\n`\nconst Desktop = styled(Show.Desktop)`\n    flex: 1;\n    width: 100%;\n`\n\nconst Mobile = styled(Show.Mobile)`\n    @media ${device.tabletL} {\n        margin-top: 0.8rem;\n        margin-bottom: 0;\n\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n    @media ${device.mobileL} {\n        margin-top: 0.8rem;\n        margin-bottom: 0;\n    }\n`\n\nconst TabPanel = ({ children, className }) => (\n    <TabContent className={className} role=\"tabpanel\" tabindex=\"0\">\n        {children}\n    </TabContent>\n)\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n}\n\nconst Tabs = ({ children, is_reverse, className, max_width }) => {\n    const [selected_tab, setSelectedTab] = React.useState(0)\n\n    useEffect(() => {\n        let timer\n        if (selected_tab >= 2) {\n            timer = setTimeout(() => setSelectedTab(0), 3000)\n        } else {\n            timer = setTimeout(() => setSelectedTab(selected_tab + 1), 3000)\n        }\n\n        return () => {\n            clearTimeout(timer)\n        }\n    }, [selected_tab, setSelectedTab])\n\n    return (\n        <Flex className={className} ai=\"center\" direction={is_reverse ? 'row-reverse' : 'row'}>\n            <TabListWrapper className=\"side-tab__wrapper\">\n                <TabList className=\"side-tab__list\" role=\"tablist\" is_reverse={is_reverse}>\n                    {React.Children.map(children, (child, index) => {\n                        const {\n                            props: { label, description },\n                        } = child\n                        return (\n                            <>\n                                <TabButton\n                                    className=\"side-tab__button\"\n                                    role=\"tab\"\n                                    selected={selected_tab === index}\n                                    aria-selected={selected_tab === index ? 'true' : 'false'}\n                                    onClick={() => setSelectedTab(index)}\n                                >\n                                    <TextLabel\n                                        selected={selected_tab === index}\n                                        className=\"side-tab__label\"\n                                        weight=\"bold\"\n                                    >\n                                        {label}\n                                    </TextLabel>\n                                    <TextDesc\n                                        selected={selected_tab === index}\n                                        className=\"side-tab__description\"\n                                        mt=\"0.8rem\"\n                                    >\n                                        {description}\n                                    </TextDesc>\n                                </TabButton>\n\n                                <Mobile\n                                    className=\"side-tab__mobile\"\n                                    min_width={max_width || 'tabletL'}\n                                >\n                                    <Content>{selected_tab === index ? child : undefined}</Content>\n                                </Mobile>\n                            </>\n                        )\n                    })}\n                </TabList>\n            </TabListWrapper>\n            <Desktop className=\"side-tab__desktop\" max_width={max_width || 'tabletL'}>\n                <Content>\n                    {React.Children.map(children, (el, index) => {\n                        return selected_tab === index ? el : undefined\n                    })}\n                </Content>\n            </Desktop>\n            <CarouselContainer ai=\"flex-end\">\n                {React.Children.map(children, (child, index) => (\n                    <CarouselDot selected={selected_tab === index} />\n                ))}\n            </CarouselContainer>\n        </Flex>\n    )\n}\n\nTabs.Panel = TabPanel\n\nTabs.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    is_reverse: PropTypes.bool,\n    max_width: PropTypes.string,\n}\n\nexport default Tabs\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport styled from 'styled-components'\nimport SideTab from './components/_tabs'\nimport { Localize, localize, LocalizedLink } from 'components/localization'\nimport { SectionContainer, Container } from 'components/containers'\nimport { Header, QueryImage } from 'components/elements'\nimport device from 'themes/device'\n\nconst query = graphql`\n    query {\n        sign_up: file(relativePath: { eq: \"deriv-go/create-account.png\" }) {\n            ...fadeIn\n        }\n        fund: file(relativePath: { eq: \"deriv-go/fund-account.png\" }) {\n            ...fadeIn\n        }\n        trading: file(relativePath: { eq: \"deriv-go/get-trading.png\" }) {\n            ...fadeIn\n        }\n    }\n`\n\nconst SmallContainer = styled(Container)`\n    width: 100%;\n    @media ${device.tabletL} {\n        width: 90%;\n        padding: 0;\n    }\n`\nconst StyledHeader = styled(Header)`\n    @media ${device.mobileL} {\n        font-size: 32px;\n        padding: 0 35px;\n    }\n    @media ${device.mobileM} {\n        padding: 0 20px;\n    }\n`\n\nconst StyledLocalizedLink = styled(LocalizedLink)`\n    text-decoration: none;\n    color: rgba(255, 68, 79, 1);\n\n    &:hover {\n        text-decoration: underline;\n    }\n`\n\nconst StartDerivGo = () => {\n    const data = useStaticQuery(query)\n    return (\n        <SectionContainer height=\"887px\" tabletL={{ height: 'fit-content', p: '40px 0 0' }}>\n            <SmallContainer direction=\"column\">\n                <StyledHeader as=\"h2\" type=\"heading-2\" align=\"center\" mb=\"4rem\">\n                    {localize('How to get started with Deriv GO')}\n                </StyledHeader>\n                <SideTab>\n                    <SideTab.Panel\n                        label={<Localize translate_text=\"1. Create your Deriv account\" />}\n                        description={\n                            <Localize\n                                translate_text=\"<0>Sign up</0> with your email, Facebook, or Google account.\"\n                                components={[<StyledLocalizedLink to=\"/signup/\" key={0} />]}\n                            />\n                        }\n                    >\n                        <QueryImage\n                            data={data['sign_up']}\n                            alt=\"Create account on Deriv GO\"\n                            className=\"content-wrapper\"\n                        />\n                    </SideTab.Panel>\n                    <SideTab.Panel\n                        label={<Localize translate_text=\"2. Fund your account\" />}\n                        description={\n                            <Localize translate_text=\"Fund your account with your preferred payment method.\" />\n                        }\n                    >\n                        <QueryImage\n                            data={data['fund']}\n                            alt=\"Fund your account and start trading on Deriv GO\"\n                            className=\"content-wrapper\"\n                        />\n                    </SideTab.Panel>\n                    <SideTab.Panel\n                        label={<Localize translate_text=\"3. Get Trading\" />}\n                        description={\n                            <Localize translate_text=\"Download the app and trade anytime, anywhere.\" />\n                        }\n                    >\n                        <QueryImage\n                            data={data['trading']}\n                            alt=\"Start trading on Deriv GO\"\n                            className=\"content-wrapper\"\n                        />\n                    </SideTab.Panel>\n                </SideTab>\n            </SmallContainer>\n        </SectionContainer>\n    )\n}\n\nexport default StartDerivGo\n"],"names":["TabContent","styled","device","TabButton","Flex","TabList","props","is_reverse","css","TabListWrapper","animateTab","keyframes","TextLabel","Text","selected","TextDesc","Content","CarouselDot","CarouselContainer","Desktop","Show","Mobile","Tabs","children","className","max_width","React","selected_tab","setSelectedTab","useEffect","timer","setTimeout","clearTimeout","ai","direction","role","child","index","label","description","onClick","weight","mt","min_width","undefined","el","Panel","tabindex","SmallContainer","Container","StyledHeader","Header","StyledLocalizedLink","LocalizedLink","data","useStaticQuery","height","tabletL","p","as","type","align","mb","localize","translate_text","components","to","key","alt"],"sourceRoot":""}