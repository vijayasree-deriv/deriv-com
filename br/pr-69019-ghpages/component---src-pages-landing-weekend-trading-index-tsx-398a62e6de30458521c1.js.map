{"version":3,"file":"component---src-pages-landing-weekend-trading-index-tsx-398a62e6de30458521c1.js","mappings":"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","sources":["webpack://deriv-com/./src/pages/landing/weekend-trading/components/_hero.tsx","webpack://deriv-com/./src/pages/landing/weekend-trading/components/_image-text-switching.tsx","webpack://deriv-com/./src/pages/landing/weekend-trading/components/_title-btn.tsx","webpack://deriv-com/./src/pages/landing/weekend-trading/index.tsx"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { Flex, Container } from 'components/containers'\nimport { Header } from 'components/elements'\nimport { localize, Localize } from 'components/localization'\nimport { Background } from 'components/elements/background-image'\nimport { LinkButton } from 'components/form'\nimport device from 'themes/device'\nimport { useBrowserResize } from 'components/hooks/use-browser-resize'\n\nconst BackgroundWrapper = styled(Background)`\n    background-size: cover;\n    background-position: bottom right;\n    @media ${device.desktopL} {\n        height: 73rem;\n    }\n    @media ${device.desktop} {\n        height: 65rem;\n    }\n    @media ${device.tabletL} {\n        height: 155rem;\n    }\n    @media ${device.tablet} {\n        height: 136rem;\n    }\n    @media ${device.tabletS} {\n        height: 105rem;\n    }\n    @media ${device.mobileL} {\n        height: 95rem;\n    }\n    @media ${device.mobileM} {\n        height: 90rem;\n    }\n    @media ${device.mobileS} {\n        height: 80rem;\n    }\n`\n\nconst Wrapper = styled(Container)`\n    @media ${device.tabletS} {\n        margin-left: 0;\n        padding: 2.1rem 16px 0;\n        flex-direction: column-reverse;\n        justify-content: center;\n    }\n`\n\nconst InformationWrapper = styled(Flex)`\n    width: 100%;\n    max-width: 71rem;\n    z-index: 1;\n\n    @media ${device.tabletL} {\n        max-width: 55rem;\n        top: 280px;\n        padding: 0 16px;\n    }\n    @media ${device.mobileL} {\n        max-width: 328px;\n        padding: 0;\n    }\n`\n\nconst HeroContent = styled(Flex)`\n    height: unset;\n\n    ${Header} {\n        font-weight: 350;\n        color: var(--color-black-3);\n        display: flex;\n        margin-top: 1rem;\n    }\n\n    @media ${device.mobileL} {\n        ${Header} {\n            margin: 10px 0 0;\n        }\n    }\n`\nconst StyledHeader = styled(Header)`\n    color: var(--color-black-3);\n    display: flex;\n\n    @media ${device.tabletL} {\n        margin-top: 1.3rem;\n    }\n    @media ${device.mobileS} {\n        margin-top: 0;\n    }\n`\n\nconst TryButton = styled(LinkButton)`\n    padding: 17px 24px;\n    width: min-content;\n    white-space: nowrap;\n    font-size: 18px;\n    margin-top: 1.2rem;\n    border: unset;\n    font-weight: 500;\n\n    @media ${device.tablet} {\n        padding: 14px 18px;\n        font-size: 14px;\n        margin-top: 40px;\n        font-weight: 700;\n    }\n    @media ${device.mobileL} {\n        margin-top: 20px;\n    }\n    @media ${device.mobileS} {\n        margin-top: 10px;\n    }\n`\n\nconst query = graphql`\n    query {\n        p2p_hero_background: file(relativePath: { eq: \"landing/weekend.png\" }) {\n            ...fadeIn\n        }\n        p2p_hero_background_mobile: file(relativePath: { eq: \"landing/weekend-m.png\" }) {\n            ...fadeIn\n        }\n    }\n`\n\nconst Hero = () => {\n    const data = useStaticQuery(query)\n    const [is_mobile] = useBrowserResize()\n    const background = is_mobile ? data['p2p_hero_background_mobile'] : data['p2p_hero_background']\n\n    return (\n        <BackgroundWrapper data={background}>\n            <Wrapper p=\"4rem 0 0\" justify=\"space-between\" height=\"unset\">\n                <InformationWrapper height=\"unset\" direction=\"column\">\n                    <StyledHeader type=\"hero\">\n                        {localize('Ride the trends even on weekends')}\n                    </StyledHeader>\n                    <HeroContent direction=\"column\" justify=\"flex-start\">\n                        <Header as=\"h2\" type=\"subtitle-1\">\n                            {\n                                <Localize translate_text=\"Trade even when most financial markets are closed\" />\n                            }\n                        </Header>\n                    </HeroContent>\n                    <TryButton\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer nofollow\"\n                        type=\"submit\"\n                        secondary=\"true\"\n                        to={'/signup/'}\n                    >\n                        {localize('Get trading')}\n                    </TryButton>\n                </InformationWrapper>\n            </Wrapper>\n        </BackgroundWrapper>\n    )\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport device, { size } from 'themes/device'\nimport { Container, SectionContainer } from 'components/containers'\nimport { Header, Text, QueryImage } from 'components/elements'\nimport { localize } from 'components/localization'\nimport { isIndexEven } from 'common/utility'\nimport { useBrowserResize } from 'components/hooks/use-browser-resize'\n\ntype ImageWrapperProps = {\n    margin_right: string\n}\n\ntype RowProps = {\n    flex_direction: string\n}\n\nconst StyledSection = styled(SectionContainer)`\n    @media ${device.tabletL} {\n        padding: 40px 16px 0;\n    }\n`\nconst StyledContainer = styled(Container)`\n    @media ${device.tabletL} {\n        width: 100%;\n    }\n`\nconst Content = styled.div<ImageWrapperProps>`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-right: ${(props) => props.margin_right};\n\n    ${Text} {\n        font-weight: 350;\n        @media ${device.tabletL} {\n            font-weight: 400;\n            font-size: 18px;\n            text-align: center;\n        }\n    }\n\n    @media ${device.tabletL} {\n        margin: 0 auto;\n    }\n`\n\nconst ImageWrapper = styled.div<ImageWrapperProps>`\n    max-width: 47.1rem;\n    width: 100%;\n    max-height: 30rem;\n    margin-right: ${(props) => props.margin_right};\n\n    @media ${device.tabletL} {\n        margin: 2rem auto;\n    }\n`\nconst StyledHeader = styled(Header)`\n    @media ${device.tabletL} {\n        width: 98%;\n        margin-top: 0;\n        text-align: center;\n    }\n`\nconst StyledText = styled(Text)`\n    @media ${device.tabletL} {\n        line-height: 30px;\n    }\n`\nconst Row = styled.div<RowProps>`\n    flex-direction: ${(props) => props.flex_direction};\n    width: 100%;\n    display: flex;\n    margin-top: 9rem;\n\n    &:first-child {\n        margin-top: 0;\n    }\n\n    @media ${device.tabletL} {\n        flex-direction: column;\n        margin-top: 40px;\n    }\n`\n\nconst query = graphql`\n    query {\n        buy_sell: file(relativePath: { eq: \"landing/crypto1.png\" }) {\n            ...fadeIn\n        }\n        local_currency: file(relativePath: { eq: \"landing/crypto2.png\" }) {\n            ...fadeIn\n        }\n    }\n`\n\ntype P2PType = {\n    title: React.ReactElement\n    subtitle1: React.ReactElement\n    subtitle2: React.ReactElement\n    subtitle_mobile1: React.ReactElement\n    subtitle_mobile2: React.ReactElement\n    image_name: string\n    image_alt: string\n}\n\ntype ImageTextSwitchingProps = {\n    P2P: P2PType[]\n    reverse: boolean\n}\n\nconst ImageTextSwitching = ({ P2P, reverse }: ImageTextSwitchingProps) => {\n    const data = useStaticQuery(query)\n    const [is_tabletL] = useBrowserResize(size.tabletL)\n\n    return (\n        <StyledSection background=\"var(--color-white)\" padding=\"5rem 0 0 0\">\n            <StyledContainer direction=\"column\">\n                <StyledText\n                    align=\"center\"\n                    lh=\"4rem\"\n                    size=\"var(--text-size-l)\"\n                    mb=\"1rem\"\n                    weight=\"bold\"\n                >\n                    {localize('Trade the markets that never sleep')}\n                </StyledText>\n\n                {P2P.map((item, index) => {\n                    const is_even = isIndexEven(index, reverse)\n                    return (\n                        <Row flex_direction={!is_even ? 'row' : 'row-reverse'} key={index}>\n                            <Content margin_right={!is_even ? '12.6rem' : '0'}>\n                                <StyledHeader type=\"heading-3\" mb=\"1rem\">\n                                    {item.title}\n                                </StyledHeader>\n                                {is_tabletL ? (\n                                    <>\n                                        <Text pb=\"2rem\">{item.subtitle_mobile1}</Text>\n                                        <Text>{item.subtitle_mobile2}</Text>\n                                    </>\n                                ) : (\n                                    <>\n                                        <Text size=\"var(--text-size-m)\" pb=\"2rem\">\n                                            {item.subtitle1}\n                                        </Text>\n                                        <Text size=\"var(--text-size-m)\">{item.subtitle2}</Text>\n                                    </>\n                                )}\n                            </Content>\n                            <ImageWrapper margin_right={!is_even ? '0' : '12.6rem'}>\n                                <QueryImage\n                                    data={data[item.image_name]}\n                                    alt={item.image_alt}\n                                    width=\"100%\"\n                                />\n                            </ImageWrapper>\n                        </Row>\n                    )\n                })}\n            </StyledContainer>\n        </StyledSection>\n    )\n}\n\nexport default ImageTextSwitching\n","import React from 'react'\nimport styled from 'styled-components'\nimport device from 'themes/device'\nimport { Container, SectionContainer } from 'components/containers'\nimport { Text } from 'components/elements'\nimport { LinkButton } from 'components/form'\n\nconst StyledSection = styled(SectionContainer)`\n    @media ${device.tabletL} {\n        margin-top: 2rem;\n        padding: 40px 16px 0;\n    }\n`\n\nconst StyledContainer = styled(Container)`\n    @media ${device.tabletL} {\n        width: 100%;\n    }\n`\n\nconst StyledText = styled(Text)`\n    @media ${device.tabletL} {\n        font-size: 24px;\n        line-height: 30px;\n        text-align: center;\n    }\n`\n\nconst TryButton = styled(LinkButton)`\n    @media ${device.mobileL} {\n        white-space: nowrap;\n        margin-bottom: 2rem;\n    }\n    @media ${device.mobileL} {\n        margin-top: 24px 0 40px;\n    }\n`\n\ntype TitlebtnProps = {\n    btnlabel: string\n    text: string\n}\n\nconst Titlebtn = ({ btnlabel, text }: TitlebtnProps) => {\n    return (\n        <StyledSection background=\"var(--color-grey-30)\" padding=\"7rem 0 3rem\" mt=\"9rem\">\n            <StyledContainer direction=\"column\">\n                <StyledText mt=\"16px\" pl=\"2rem\" pr=\"2rem\" size=\"3.2rem\" weight=\"700\">\n                    {text}\n                </StyledText>\n                <TryButton\n                    m=\"4.2rem 0 40px\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer nofollow\"\n                    type=\"submit\"\n                    secondary=\"true\"\n                    to={'/signup/'}\n                >\n                    {btnlabel}\n                </TryButton>\n            </StyledContainer>\n        </StyledSection>\n    )\n}\n\nexport default Titlebtn\n","import React from 'react'\nimport Loadable from '@loadable/component'\nimport Hero from './components/_hero'\nimport ImageTextSwitching from './components/_image-text-switching'\nimport Titlebtn from './components/_title-btn'\nimport { localize, Localize, WithIntl } from 'components/localization'\nimport Layout from 'components/layout/layout'\nimport { SEO } from 'components/containers'\nconst IconTextRow = Loadable(() => import('./components/_icon-text-row'))\n\nconst DP2P_CONTENT = [\n    {\n        title: <Localize translate_text=\"Synthetic indices\" />,\n        subtitle1: (\n            <Localize\n                translate_text=\"Deriv's synthetic indices mimic real-world market movements and offer various volatility levels to suit your risk appetite.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n        subtitle2: (\n            <Localize translate_text=\"Available to trade on Deriv MT5 and Deriv X (with margin), DTrader (with options and multipliers), and Deriv GO (with multipliers).\" />\n        ),\n        subtitle_mobile1: (\n            <Localize\n                translate_text=\"Deriv's synthetic indices mimic real-world market movements and offer various volatility levels to suit your risk appetite.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n        subtitle_mobile2: (\n            <Localize translate_text=\"Available to trade on Deriv MT5 and Deriv X (with margin), DTrader (with options and multipliers), and Deriv GO (with multipliers).\" />\n        ),\n        image_name: 'buy_sell',\n        image_alt: localize('Buy and sell'),\n    },\n    {\n        title: <Localize translate_text=\"Cryptocurrency\" />,\n        subtitle1: (\n            <Localize\n                translate_text=\"Correctly predict the price movements of the world's most popular cryptocurrencies. Over 17 crypto pairs to trade on.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n        subtitle2: (\n            <Localize translate_text=\"Available to trade on Deriv MT5 and Deriv X (with margin) and DTrader (with multipliers).\" />\n        ),\n        subtitle_mobile1: (\n            <Localize\n                translate_text=\"Correctly predict the price movements of the world's most popular cryptocurrencies. Over 17 crypto pairs to trade on.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n        subtitle_mobile2: (\n            <Localize translate_text=\"Available to trade on Deriv MT5 and Deriv X (with margin) and DTrader (with multipliers).\" />\n        ),\n\n        image_name: 'local_currency',\n        image_alt: localize('Local currency'),\n    },\n]\n\nconst WeekenLP = () => {\n    return (\n        <Layout type=\"landing-page\" is_ppc_redirect={true}>\n            <SEO\n                title={localize('Weekends')}\n                description={localize('Ride the trends even on weekends')}\n            />\n            <Hero />\n            <IconTextRow />\n            <ImageTextSwitching reverse P2P={DP2P_CONTENT} />\n            <Titlebtn\n                btnlabel={localize('Get trading')}\n                text={localize('Create your Deriv account now and start trading!')}\n            />\n        </Layout>\n    )\n}\n\nexport default WithIntl()(WeekenLP)\n"],"names":["BackgroundWrapper","styled","Background","withConfig","device","Wrapper","Container","InformationWrapper","Flex","HeroContent","Header","StyledHeader","TryButton","LinkButton","data","useStaticQuery","background","useBrowserResize","React","p","justify","height","direction","type","localize","as","Localize","translate_text","target","rel","secondary","to","StyledSection","SectionContainer","StyledContainer","Content","props","margin_right","Text","ImageWrapper","StyledText","Row","flex_direction","P2P","reverse","is_tabletL","size","padding","align","lh","mb","weight","map","item","index","is_even","isIndexEven","key","title","pb","subtitle_mobile1","subtitle_mobile2","subtitle1","subtitle2","QueryImage","image_name","alt","image_alt","width","btnlabel","text","mt","pl","pr","m","IconTextRow","Loadable","DP2P_CONTENT","components","WithIntl","Layout","is_ppc_redirect","SEO","description","Hero","ImageTextSwitching","Titlebtn"],"sourceRoot":""}