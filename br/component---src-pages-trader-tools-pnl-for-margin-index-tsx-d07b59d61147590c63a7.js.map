{"version":3,"file":"component---src-pages-trader-tools-pnl-for-margin-index-tsx-d07b59d61147590c63a7.js","mappings":"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","sources":["webpack://deriv-com/./src/pages/trader-tools/common/_underlying-data.tsx","webpack://deriv-com/./src/pages/trader-tools/pnl-for-margin/_pnl-margin-calculator.tsx","webpack://deriv-com/./src/pages/trader-tools/pnl-for-margin/index.tsx"],"sourcesContent":["import React from 'react'\nimport {\n    AAL,\n    AAPL,\n    ABNB,\n    ADS,\n    AIG,\n    AMZN,\n    AUDCAD,\n    AUDCHF,\n    AUDBASKET,\n    AUDJPY,\n    AUDNZD,\n    AUDUSD,\n    AUS200,\n    BA,\n    BABA,\n    BAC,\n    BAY,\n    BCHUSD,\n    BIIB,\n    BMW,\n    BOOM1000,\n    BOOM500,\n    BTCUSD,\n    C,\n    CADCHF,\n    CADJPY,\n    CHFJPY,\n    CLBRENT,\n    CRASH1000,\n    CRASH500,\n    CRM,\n    CSCO,\n    DAL,\n    DBK,\n    DIS,\n    DSHUSD,\n    EBAY,\n    EOSUSD,\n    ESP35,\n    EUR50,\n    EURCAD,\n    EURCHF,\n    EURGBP,\n    EURBASKET,\n    EURJPY,\n    EURNZD,\n    EURUSD,\n    FB,\n    FDX,\n    FRA40,\n    GBPAUD,\n    GBPCAD,\n    GBPCHF,\n    GBPBASKET,\n    GBPJPY,\n    GBPNZD,\n    GBPUSD,\n    GM,\n    GOLDUSD,\n    GOLDBASKET,\n    GOOGL,\n    GS,\n    HPQ,\n    IBM,\n    INDEX10,\n    INDEX100,\n    INDEX100S1,\n    INDEX10S1,\n    INDEX25,\n    INDEX25S1,\n    INDEX50,\n    INDEX50S1,\n    INDEX75,\n    INDEX75S1,\n    INTC,\n    JNJ,\n    JP225,\n    JPM,\n    KO,\n    LTCUSD,\n    MA,\n    MCD,\n    MRNA,\n    MSFT,\n    NED25,\n    NFLX,\n    NKE,\n    NVDA,\n    NZDCAD,\n    NZDJPY,\n    NZDUSD,\n    OILUSD,\n    PALLADIUMUSD,\n    PFE,\n    PG,\n    PLATINUMUSD,\n    PYPL,\n    RANGEBREAK100,\n    RANGEBREAK200,\n    SILVERUSD,\n    STEPINDICES,\n    TEVA,\n    TSLA,\n    TWTR,\n    UBER,\n    UK100,\n    US100,\n    US30,\n    US500,\n    USDCAD,\n    USDCHF,\n    USDBASKET,\n    USDJPY,\n    USDZAR,\n    V,\n    WMT,\n    XRPUSD,\n    ZM,\n} from 'components/elements/symbols.js'\n\nexport const optionItemDefault = {\n    name: 'default',\n    display_name: '',\n    key: '14',\n    icon: '',\n    market: '',\n}\n\nexport const optionLeverageDefault = {\n    name: 'value',\n    display_name: '',\n    key: '14',\n    icon: '',\n    market: '',\n}\n\nexport const leverageItemLists = [\n    { name: 4000, display_name: 4000, key: '1', icon: '' },\n    { name: 3500, display_name: 3500, key: '2', icon: '' },\n    { name: 3000, display_name: 3000, key: '3', icon: '' },\n    { name: 2500, display_name: 2500, key: '4', icon: '' },\n    { name: 2000, display_name: 2000, key: '5', icon: '' },\n    { name: 1500, display_name: 1500, key: '6', icon: '' },\n    { name: 1000, display_name: 1000, key: '7', icon: '' },\n    { name: 900, display_name: 900, key: '8', icon: '' },\n    { name: 800, display_name: 800, key: '9', icon: '' },\n    { name: 700, display_name: 700, key: '10', icon: '' },\n    { name: 600, display_name: 600, key: '11', icon: '' },\n    { name: 500, display_name: 500, key: '12', icon: '' },\n    { name: 400, display_name: 400, key: '13', icon: '' },\n    { name: 200, display_name: 200, key: '14', icon: '' },\n    { name: 100, display_name: 100, key: '15', icon: '' },\n    { name: 50, display_name: 50, key: '16', icon: '' },\n    { name: 30, display_name: 30, key: '17', icon: '' },\n    { name: 5, display_name: 5, key: '18', icon: '' },\n]\n\nexport const syntheticItemLists = [\n    {\n        name: 'Boom 1000 Index',\n        display_name: 'Boom 1000 Index',\n        icon: <img src={BOOM1000} alt=\"boom 100\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Boom 500 Index',\n        display_name: 'Boom 500 Index',\n        icon: <img src={BOOM500} alt=\"boom 500\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Crash 1000 Index',\n        display_name: 'Crash 1000 Index',\n        icon: <img src={CRASH1000} alt=\"crash 1000\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Crash 500 Index',\n        display_name: 'Crash 500 Index',\n        icon: <img src={CRASH500} alt=\"crash 500\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Range Break 100 Index',\n        display_name: 'Range Break 100 Index',\n        icon: <img src={RANGEBREAK100} alt=\"\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Range Break 200 Index',\n        display_name: 'Range Break 200 Index',\n        icon: <img src={RANGEBREAK200} alt=\"range break 200\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Step Index',\n        display_name: 'Step Index',\n        icon: <img src={STEPINDICES} alt=\"step index\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 10 (1s) Index',\n        display_name: 'Volatility 10 (1s) Index',\n        icon: <img src={INDEX10S1} alt=\"vol 10 1s\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 10 Index',\n        display_name: 'Volatility 10 Index',\n        icon: <img src={INDEX10} alt=\"vol 10\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 25 (1s) Index',\n        display_name: 'Volatility 25 (1s) Index',\n        icon: <img src={INDEX25S1} alt=\"vol 25 1s\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 25 Index',\n        display_name: 'Volatility 25 Index',\n        icon: <img src={INDEX25} alt=\"\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 50 (1s) Index',\n        display_name: 'Volatility 50 (1s) Index',\n        icon: <img src={INDEX50S1} alt=\"vol 50 1s\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 50 Index',\n        display_name: 'Volatility 50 Index',\n        icon: <img src={INDEX50} alt=\"vol 50\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 75 (1s) Index',\n        display_name: 'Volatility 75 (1s) Index',\n        icon: <img src={INDEX75S1} alt=\"vol 75 1s\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 75 Index',\n        display_name: 'Volatility 75 Index',\n        icon: <img src={INDEX75} alt=\"vol 75\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 100 (1s) Index',\n        display_name: 'Volatility 100 (1s) Index',\n        icon: <img src={INDEX100S1} alt=\"vol 100 1s\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 100 Index',\n        display_name: 'Volatility 100 Index',\n        icon: <img src={INDEX100} alt=\"vol 100\" />,\n        market: 'synthetic_indices',\n    },\n]\n\nexport const financialItemLists = [\n    {\n        name: 'AAL',\n        display_name: 'American Airlines Group Inc',\n        icon: <img src={AAL} alt=\"american airlines group inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'AAPL',\n        display_name: 'Apple',\n        icon: <img src={AAPL} alt=\"apple\" />,\n        market: 'other',\n    },\n    {\n        name: 'ABNB',\n        display_name: 'Airbnb Inc',\n        icon: <img src={ABNB} alt=\"airbnb\" />,\n        market: 'other',\n    },\n    {\n        name: 'ADS',\n        display_name: 'Adidas Salomon',\n        icon: <img src={ADS} alt=\"adidas salomon\" />,\n        market: 'other',\n    },\n    {\n        name: 'AIG',\n        display_name: 'American International Group',\n        icon: <img src={AIG} alt=\"american international group\" />,\n        market: 'other',\n    },\n    {\n        name: 'AMZN',\n        display_name: 'Amazon.com Inc',\n        icon: <img src={AMZN} alt=\"amazon.com inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'BA',\n        display_name: 'Boeing',\n        icon: <img src={BA} alt=\"boeing\" />,\n        market: 'other',\n    },\n    {\n        name: 'BABA',\n        display_name: 'Alibaba Group Holding Ltd',\n        icon: <img src={BABA} alt=\"alibaba group holding ltd\" />,\n        market: 'other',\n    },\n    {\n        name: 'BAC',\n        display_name: 'Bank of America',\n        icon: <img src={BAC} alt=\"bank of america\" />,\n        market: 'other',\n    },\n    {\n        name: 'BAY',\n        display_name: 'Bayer AG',\n        icon: <img src={BAY} alt=\"bayer ag\" />,\n        market: 'other',\n    },\n    {\n        name: 'BIIB',\n        display_name: 'Biogen Inc.',\n        icon: <img src={BIIB} alt=\"biogen inc.\" />,\n        market: 'other',\n    },\n    {\n        name: 'BMW',\n        display_name: 'BMW',\n        icon: <img src={BMW} alt=\"bmw\" />,\n        market: 'other',\n    },\n    {\n        name: 'C',\n        display_name: 'Citigroup',\n        icon: <img src={C} alt=\"citigroup\" />,\n        market: 'other',\n    },\n    {\n        name: 'CRM',\n        display_name: 'Salesforce.com Inc',\n        icon: <img src={CRM} alt=\"salesforce.com inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'CSCO',\n        display_name: 'Cisco Systems',\n        icon: <img src={CSCO} alt=\"cisco systems\" />,\n        market: 'other',\n    },\n    {\n        name: 'DAL',\n        display_name: 'Delta Air Lines',\n        icon: <img src={DAL} alt=\"delta air lines\" />,\n        market: 'other',\n    },\n    {\n        name: 'DBK',\n        display_name: 'Deutsche Bank AG',\n        icon: <img src={DBK} alt=\"deutsche bank ag\" />,\n        market: 'other',\n    },\n    {\n        name: 'DIS',\n        display_name: 'Walt Disney Company',\n        icon: <img src={DIS} alt=\"walt disney company\" />,\n        market: 'other',\n    },\n    {\n        name: 'EBAY',\n        display_name: 'eBay Inc',\n        icon: <img src={EBAY} alt=\"ebay inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'FB',\n        display_name: 'Facebook Inc',\n        icon: <img src={FB} alt=\"facebook inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'FDX',\n        display_name: 'Fedex',\n        icon: <img src={FDX} alt=\"fedex\" />,\n        market: 'other',\n    },\n    {\n        name: 'GM',\n        display_name: 'General Motors Company',\n        icon: <img src={GM} alt=\"general motors company\" />,\n        market: 'other',\n    },\n    {\n        name: 'GOOGL',\n        display_name: 'Alphabet Inc Class C',\n        icon: <img src={GOOGL} alt=\"alphabet inc class c\" />,\n        market: 'other',\n    },\n    {\n        name: 'GS',\n        display_name: 'Goldman Sachs Group',\n        icon: <img src={GS} alt=\"goldman sachs group\" />,\n        market: 'other',\n    },\n    {\n        name: 'HPQ',\n        display_name: 'HP Inc',\n        icon: <img src={HPQ} alt=\"hp inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'IBM',\n        display_name: 'IBM',\n        icon: <img src={IBM} alt=\"ibm\" />,\n        market: 'other',\n    },\n    {\n        name: 'INTC',\n        display_name: 'Intel',\n        icon: <img src={INTC} alt=\"intel\" />,\n        market: 'other',\n    },\n    {\n        name: 'JNJ',\n        display_name: 'Jonhson & Johnson',\n        icon: <img src={JNJ} alt=\"jonhson and johnson\" />,\n        market: 'other',\n    },\n    {\n        name: 'JPM',\n        display_name: 'JP Morgan Chase',\n        icon: <img src={JPM} alt=\"jp morgan chase\" />,\n        market: 'other',\n    },\n    {\n        name: 'KO',\n        display_name: 'Coca-Cola',\n        icon: <img src={KO} alt=\"coca-cola\" />,\n        market: 'other',\n    },\n    {\n        name: 'MA',\n        display_name: 'Mastercard Inc',\n        icon: <img src={MA} alt=\"mastercard inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'MCD',\n        display_name: 'McDonalds',\n        icon: <img src={MCD} alt=\"McDonalds\" />,\n        market: 'other',\n    },\n    {\n        name: 'MRNA',\n        display_name: 'Moderna Inc',\n        icon: <img src={MRNA} alt=\"moderna inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'MSFT',\n        display_name: 'Microsoft Corporation',\n        icon: <img src={MSFT} alt=\"microsoft corporation\" />,\n        market: 'other',\n    },\n    {\n        name: 'NFLX',\n        display_name: 'Netflix Inc',\n        icon: <img src={NFLX} alt=\"netflix inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'NKE',\n        display_name: 'Nike',\n        icon: <img src={NKE} alt=\"nike\" />,\n        market: 'other',\n    },\n    {\n        name: 'NVDA',\n        display_name: 'NVIDIA Corp',\n        icon: <img src={NVDA} alt=\"nvidia corp\" />,\n        market: 'other',\n    },\n    {\n        name: 'PFE',\n        display_name: 'Pfizer',\n        icon: <img src={PFE} alt=\"pfizer\" />,\n        market: 'other',\n    },\n    {\n        name: 'PG',\n        display_name: 'Procter & Gamble',\n        icon: <img src={PG} alt=\"procter and gamble\" />,\n        market: 'other',\n    },\n    {\n        name: 'PYPL',\n        display_name: 'Paypal',\n        icon: <img src={PYPL} alt=\"paypal\" />,\n        market: 'other',\n    },\n    {\n        name: 'TEVA',\n        display_name: 'Teva Pharmaceutical Inds',\n        icon: <img src={TEVA} alt=\"teva pharmaceutical inds\" />,\n        market: 'other',\n    },\n    {\n        name: 'TSLA',\n        display_name: 'Tesla Inc',\n        icon: <img src={TSLA} alt=\"tesla inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'TWTR',\n        display_name: 'Twitter',\n        icon: <img src={TWTR} alt=\"twitter\" />,\n        market: 'other',\n    },\n    {\n        name: 'UBER',\n        display_name: 'Uber Technologies Inc',\n        icon: <img src={UBER} alt=\"uber technologies inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'V',\n        display_name: 'Visa',\n        icon: <img src={V} alt=\"visa\" />,\n        market: 'other',\n    },\n    {\n        name: 'WMT',\n        display_name: 'Wal-Mart Stores Inc',\n        icon: <img src={WMT} alt=\"wal-mart stores inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'ZM',\n        display_name: 'Zoom Video Communications Inc',\n        icon: <img src={ZM} alt=\"zoom video communications inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'AUS200',\n        display_name: 'Australia 200',\n        icon: <img src={AUS200} alt=\"australia 200\" />,\n        market: 'other',\n    },\n    {\n        name: 'ESP35',\n        display_name: 'Spain 35',\n        icon: <img src={ESP35} alt=\"spain 35\" />,\n        market: 'other',\n    },\n    {\n        name: 'EUR50',\n        display_name: 'Europe 50',\n        icon: <img src={EUR50} alt=\"europe 50\" />,\n        market: 'other',\n    },\n    {\n        name: 'FRA40',\n        display_name: 'France 40',\n        icon: <img src={FRA40} alt=\"france 40\" />,\n        market: 'other',\n    },\n    {\n        name: 'UK100',\n        display_name: 'UK 100',\n        icon: <img src={UK100} alt=\"uk 100\" />,\n        market: 'other',\n    },\n    {\n        name: 'JP225',\n        display_name: 'Japan 225',\n        icon: <img src={JP225} alt=\"japan 225\" />,\n        market: 'other',\n    },\n    {\n        name: 'NED25',\n        display_name: 'Netherland 25',\n        icon: <img src={NED25} alt=\"netherland 25\" />,\n        market: 'other',\n    },\n    {\n        name: 'US500',\n        display_name: 'US 500',\n        icon: <img src={US500} alt=\"us 500\" />,\n        market: 'other',\n    },\n    {\n        name: 'US100',\n        display_name: 'US 100',\n        icon: <img src={US100} alt=\"us 100\" />,\n        market: 'other',\n    },\n    {\n        name: 'US30',\n        display_name: 'Wall Street 30',\n        icon: <img src={US30} alt=\"wall street 30\" />,\n        market: 'other',\n    },\n    {\n        name: 'CL_BRENT',\n        display_name: 'CL_BRENT',\n        icon: <img src={CLBRENT} alt=\"cl brent\" />,\n        market: 'other',\n    },\n    {\n        name: 'BCHUSD',\n        display_name: 'BCH/USD',\n        icon: <img src={BCHUSD} alt=\"bch usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'BTCUSD',\n        display_name: 'BTC/USD',\n        icon: <img src={BTCUSD} alt=\"btc usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'DSHUSD',\n        display_name: 'DSH/USD',\n        icon: <img src={DSHUSD} alt=\"dsh usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'EOSUSD',\n        display_name: 'EOS/USD',\n        icon: <img src={EOSUSD} alt=\"eos usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'LTCUSD',\n        display_name: 'LTC/USD',\n        icon: <img src={LTCUSD} alt=\"ltc usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'XRPUSD',\n        display_name: 'XRP/USD',\n        icon: <img src={XRPUSD} alt=\"xrp usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'AUDCAD',\n        display_name: 'AUD/CAD',\n        icon: <img src={AUDCAD} alt=\"aud cad\" />,\n        market: 'forex',\n    },\n    {\n        name: 'AUDCHF',\n        display_name: 'AUD/CHF',\n        icon: <img src={AUDCHF} alt=\"aud chf\" />,\n        market: 'forex',\n    },\n    {\n        name: 'AUDJPY',\n        display_name: 'AUD/JPY',\n        icon: <img src={AUDJPY} alt=\"aud jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'AUDNZD',\n        display_name: 'AUD/NZD',\n        icon: <img src={AUDNZD} alt=\"aud nzd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'AUDUSD',\n        display_name: 'AUD/USD',\n        icon: <img src={AUDUSD} alt=\"aud usd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURCAD',\n        display_name: 'EUR/CAD',\n        icon: <img src={EURCAD} alt=\"eur cad\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURCHF',\n        display_name: 'EUR/CHF',\n        icon: <img src={EURCHF} alt=\"eur chf\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURGBP',\n        display_name: 'EUR/GBP',\n        icon: <img src={EURGBP} alt=\"eur gbp\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURJPY',\n        display_name: 'EUR/JPY',\n        icon: <img src={EURJPY} alt=\"eur jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURNZD',\n        display_name: 'EUR/NZD',\n        icon: <img src={EURNZD} alt=\"eur nzd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURUSD',\n        display_name: 'EUR/USD',\n        icon: <img src={EURUSD} alt=\"eur usd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPCHF',\n        display_name: 'GBP/CHF',\n        icon: <img src={GBPCHF} alt=\"gbp chf\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPJPY',\n        display_name: 'GBP/JPY',\n        icon: <img src={GBPJPY} alt=\"gbp jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPUSD',\n        display_name: 'GBP/USD',\n        icon: <img src={GBPUSD} alt=\"gbp usd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'NZDUSD',\n        display_name: 'NZD/USD',\n        icon: <img src={NZDUSD} alt=\"nzd usd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'USDCAD',\n        display_name: 'USD/CAD',\n        icon: <img src={USDCAD} alt=\"usd cad\" />,\n        market: 'forex',\n    },\n    {\n        name: 'USDCHF',\n        display_name: 'USD/CHF',\n        icon: <img src={USDCHF} alt=\"usd chf\" />,\n        market: 'forex',\n    },\n    {\n        name: 'USDJPY',\n        display_name: 'USD/JPY',\n        icon: <img src={USDJPY} alt=\"usd jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'CADCHF',\n        display_name: 'CAD/CHF',\n        icon: <img src={CADCHF} alt=\"cad chf\" />,\n        market: 'forex',\n    },\n    {\n        name: 'CADJPY',\n        display_name: 'CAD/JPY',\n        icon: <img src={CADJPY} alt=\"cad jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPAUD',\n        display_name: 'GBP/AUD',\n        icon: <img src={GBPAUD} alt=\"gbp aud\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPCAD',\n        display_name: 'GBP/CAD',\n        icon: <img src={GBPCAD} alt=\"gbp cad\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPNZD',\n        display_name: 'GBP/NZD',\n        icon: <img src={GBPNZD} alt=\"gbp nzd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'NZDCAD',\n        display_name: 'NZD/CAD',\n        icon: <img src={NZDCAD} alt=\"nzd cad\" />,\n        market: 'forex',\n    },\n    {\n        name: 'NZDJPY',\n        display_name: 'NZD/JPY',\n        icon: <img src={NZDJPY} alt=\"nzd jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'USDZAR',\n        display_name: 'USD/ZAR',\n        icon: <img src={USDZAR} alt=\"usd zar\" />,\n        market: 'forex',\n    },\n    {\n        name: 'CHFJPY',\n        display_name: 'CHF/JPY',\n        icon: <img src={CHFJPY} alt=\"chf  jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'WTI_OIL',\n        display_name: 'Oil/USD',\n        icon: <img src={OILUSD} alt=\"oil usd\" />,\n        market: 'commodities',\n    },\n    {\n        name: 'XAUUSD',\n        display_name: 'Gold/USD',\n        icon: <img src={GOLDUSD} alt=\"gold usd\" />,\n        market: 'commodities',\n    },\n    {\n        name: 'XAGUSD',\n        display_name: 'Silver/USD',\n        icon: <img src={SILVERUSD} alt=\"silver usd\" />,\n        market: 'commodities',\n    },\n    {\n        name: 'XPDUSD',\n        display_name: 'Palladium/USD',\n        icon: <img src={PALLADIUMUSD} alt=\"palladium usd\" />,\n        market: 'commodities',\n    },\n    {\n        name: 'XPTUSD',\n        display_name: 'Platinum/USD',\n        icon: <img src={PLATINUMUSD} alt=\"platinum usd\" />,\n        market: 'commodities',\n    },\n    {\n        name: 'AUDBASKET',\n        display_name: 'AUD Basket',\n        icon: <img src={AUDBASKET} alt=\"aud basket\" />,\n        market: 'basket_indices',\n    },\n    {\n        name: 'GBPBASKET',\n        display_name: 'GBP Basket',\n        icon: <img src={GBPBASKET} alt=\"gbp basket\" />,\n        market: 'basket_indices',\n    },\n    {\n        name: 'EURBASKET',\n        display_name: 'EUR Basket',\n        icon: <img src={EURBASKET} alt=\"eur basket\" />,\n        market: 'basket_indices',\n    },\n    {\n        name: 'USDBASKET',\n        display_name: 'USD Basket',\n        icon: <img src={USDBASKET} alt=\"usd basket\" />,\n        market: 'basket_indices',\n    },\n    {\n        name: 'GOLDBASKET',\n        display_name: 'Gold Basket',\n        icon: <img src={GOLDBASKET} alt=\"gold basket\" />,\n        market: 'basket_indices',\n    },\n]\n","import * as React from 'react'\nimport { useState, useRef } from 'react'\nimport { Field, Formik } from 'formik'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport {\n    getContractSize,\n    getCurrency,\n    getPnlMarginCommon,\n    numberSubmitFormat,\n    resetValidationPnlMargin,\n    getMaxLength,\n} from '../common/_utility'\nimport {\n    financialItemLists,\n    optionItemDefault,\n    syntheticItemLists,\n} from '../common/_underlying-data'\nimport {\n    BreadCrumbContainer,\n    CalculateButton,\n    CalculatorBody,\n    CalculatorDropdown,\n    CalculatorForm,\n    CalculatorHeader,\n    CalculatorLabel,\n    ContentContainer,\n    FormulaText,\n    FormWrapper,\n    header_style,\n    InputGroup,\n    LinkWrapper,\n    PnlCalculatorFormMobile,\n    PnlCalculatorHeaderMobile,\n    PnLCalculatorOutputContainer,\n    PnLCalculatorOutputField,\n    PnLCalculatorOutputSymbol,\n    PnlCalculatorTabItem,\n    PnlHeaderOverflow,\n    PnLInputGroup,\n    RightContent,\n    SectionSubtitle,\n    StyledLinkButton,\n    StyledOl,\n    StyledSection,\n    SwapTabSelector,\n} from '../common/_style'\nimport { localize, Localize } from 'components/localization'\nimport {\n    Accordion,\n    AccordionItem,\n    Header,\n    LocalizedLinkText,\n    QueryImage,\n    Text,\n} from 'components/elements'\nimport { Flex, Show } from 'components/containers'\nimport Input from 'components/form/input'\nimport RightArrow from 'images/svg/tools/black-right-arrow.svg'\n\nconst PnlMarginCalculator = () => {\n    const query = graphql`\n        query {\n            stop_loss_level_formula: file(\n                relativePath: { eq: \"trade-tools/stop-loss-level-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_level_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/stop-loss-level-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_pip_formula: file(\n                relativePath: { eq: \"trade-tools/stop-loss-pip-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_pip_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/stop-loss-pip-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_level_formula: file(\n                relativePath: { eq: \"trade-tools/take-profit-level-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_level_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/take-profit-level-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_pip_formula: file(\n                relativePath: { eq: \"trade-tools/take-profit-pip-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_pip_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/take-profit-pip-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n        }\n    `\n\n    const data = useStaticQuery(query)\n    const formik_ref = useRef(null)\n    const form = formik_ref.current\n\n    const [tab, setTab] = useState('Buy')\n    const [sub_tab, setSubTab] = useState('Synthetic')\n    // These additional states have been created to track the first output (levels)\n    // from the calculator in order to rerender the second output (pips)\n    const [stop_loss_output, setStopLossOutput] = useState('0')\n    const [take_profit_output, setTakeProfitOutput] = useState('0')\n\n    const onTabClick = (t) => {\n        setTab(t)\n        if (form) {\n            form.resetForm({})\n            form.setErrors({})\n            form.setFieldValue('accountType', sub_tab === 'Synthetic' ? 'Synthetic' : 'Financial')\n            form.setFieldValue(\n                'optionList',\n                sub_tab === 'Synthetic' ? syntheticItemLists : financialItemLists,\n            )\n        }\n    }\n    const onSubTabClick = (t) => setSubTab(t)\n\n    // Watch the state of the first output, and update the second output upon change\n    // TODO: Find a cleaner solution for this\n    React.useEffect(() => {\n        if (form?.values.pointValue) {\n            form.setFieldValue(\n                'stopLossPips',\n                getPnlMarginCommon(formik_ref.current.values, 'getStopLossPip'),\n            )\n            form.setFieldValue(\n                'takeProfitPips',\n                getPnlMarginCommon(formik_ref.current.values, 'getTakeProfitPip'),\n            )\n            // The 2 calls below is to reset the output state in order\n            // prevent the pip output from displaying NAN\n            setStopLossOutput('0')\n            setTakeProfitOutput('0')\n        }\n    }, [stop_loss_output, take_profit_output])\n\n    return (\n        <>\n            <BreadCrumbContainer>\n                <Flex jc=\"flex-start\" ai=\"center\">\n                    <LocalizedLinkText to=\"/trader-tools/\" color=\"grey-5\">\n                        {localize(\"Traders' tools\")}\n                    </LocalizedLinkText>\n                    <img\n                        src={RightArrow}\n                        alt={localize('right arrow')}\n                        height=\"16\"\n                        width=\"16\"\n                        style={{ margin: '0 8px' }}\n                    />\n                    <Text>{localize('PnL for margin')}</Text>\n                </Flex>\n            </BreadCrumbContainer>\n            <StyledSection direction=\"column\">\n                <SectionSubtitle as=\"h3\" type=\"sub-section-title\" align=\"center\" weight=\"normal\">\n                    {localize(\n                        'Our profit and loss calculator for margin helps you to approximate your losses and/or gains.',\n                    )}\n                </SectionSubtitle>\n\n                <Flex mt=\"80px\" mb=\"40px\" tablet={{ mt: '40px', mb: '24px' }}>\n                    <SwapTabSelector active={tab === 'Buy'} onClick={() => onTabClick('Buy')}>\n                        <Text size=\"var(--text-size-m)\" align=\"center\">\n                            {localize('Buy')}\n                        </Text>\n                    </SwapTabSelector>\n                    <SwapTabSelector active={tab === 'Sell'} onClick={() => onTabClick('Sell')}>\n                        <Text size=\"var(--text-size-m)\" align=\"center\">\n                            {localize('Sell')}\n                        </Text>\n                    </SwapTabSelector>\n                </Flex>\n\n                <ContentContainer mb=\"4.0rem\">\n                    <FormWrapper>\n                        <Formik\n                            innerRef={formik_ref}\n                            enableReinitialize\n                            initialValues={{\n                                accountType: 'Synthetic',\n                                pnlMarginSymbol: 'USD',\n                                stopLossPips: 0,\n                                stopLossLevel: 0,\n                                takeProfitPips: 0,\n                                takeProfitLevel: 0,\n                                symbol: '',\n                                pointValue: '',\n                                volume: '',\n                                takeProfitAmount: '',\n                                optionList: syntheticItemLists,\n                                contractSize: '',\n                                assetPrice: '',\n                                stopLossAmount: '',\n                            }}\n                            validate={resetValidationPnlMargin}\n                            onSubmit={(values, { setFieldValue }) => {\n                                setFieldValue(\n                                    'stopLossPips',\n                                    getPnlMarginCommon(values, 'getStopLossPip'),\n                                )\n                                if (tab === 'Buy') {\n                                    setFieldValue(\n                                        'takeProfitLevel',\n                                        getPnlMarginCommon(values, 'getTakeProfitLevelBuy'),\n                                    )\n                                    setTakeProfitOutput(\n                                        getPnlMarginCommon(values, 'getTakeProfitLevelBuy'),\n                                    )\n                                    setFieldValue(\n                                        'stopLossLevel',\n                                        getPnlMarginCommon(values, 'getStopLossLevelBuy'),\n                                    )\n                                    setStopLossOutput(\n                                        getPnlMarginCommon(values, 'getStopLossLevelBuy'),\n                                    )\n                                }\n                                if (tab === 'Sell') {\n                                    setFieldValue(\n                                        'stopLossLevel',\n                                        getPnlMarginCommon(values, 'getStopLossLevelSell'),\n                                    )\n                                    setStopLossOutput(\n                                        getPnlMarginCommon(values, 'getStopLossLevelSell'),\n                                    )\n                                    setFieldValue(\n                                        'takeProfitLevel',\n                                        getPnlMarginCommon(values, 'getTakeProfitLevelSell'),\n                                    )\n                                    setTakeProfitOutput(\n                                        getPnlMarginCommon(values, 'getTakeProfitLevelSell'),\n                                    )\n                                }\n\n                                setFieldValue(\n                                    'takeProfitPips',\n                                    getPnlMarginCommon(values, 'getTakeProfitPip'),\n                                )\n\n                                setFieldValue('pointValue', numberSubmitFormat(values.pointValue))\n                                setFieldValue('volume', numberSubmitFormat(values.volume))\n                                setFieldValue('assetPrice', numberSubmitFormat(values.assetPrice))\n                                setFieldValue(\n                                    'stopLossAmount',\n                                    numberSubmitFormat(values.stopLossAmount),\n                                )\n                                setFieldValue(\n                                    'takeProfitAmount',\n                                    numberSubmitFormat(values.takeProfitAmount),\n                                )\n                            }}\n                        >\n                            {({\n                                values,\n                                setFieldValue,\n                                handleBlur,\n                                errors,\n                                touched,\n                                setFieldError,\n                                setFieldTouched,\n                                isValid,\n                                dirty,\n                                setErrors,\n                                resetForm,\n                            }) => {\n                                const pnlSyntheticHandler = () => {\n                                    onSubTabClick('Synthetic')\n                                    setErrors({})\n                                    resetForm()\n                                }\n\n                                const pnlFinancialHandler = () => {\n                                    onSubTabClick('Financial')\n                                    setErrors({})\n                                    resetForm()\n                                    setFieldValue('accountType', 'Financial')\n                                    setFieldValue('optionList', financialItemLists)\n                                }\n\n                                const calculatorDropdownHandler = (value) => {\n                                    setFieldValue('pnlMarginSymbol', getCurrency(value))\n                                    setFieldValue('contractSize', getContractSize(value))\n                                    setFieldValue('symbol', value)\n                                }\n\n                                const takeProfitErrorHanlder = (current_input) => {\n                                    setFieldValue('takeProfitAmount', '', false)\n                                    setFieldError('takeProfitAmount', '')\n                                    setFieldTouched('takeProfitAmount', false, false)\n                                    current_input.focus()\n                                }\n\n                                const stopLossErrorHandler = (current_input) => {\n                                    setFieldValue('stopLossAmount', '', false)\n                                    setFieldError('stopLossAmount', '')\n                                    setFieldTouched('stopLossAmount', false, false)\n                                    current_input.focus()\n                                }\n\n                                const AssetPriceInput = ({ field }: { field: React.ReactNode }) => (\n                                    <Input\n                                        {...field}\n                                        id=\"assetPrice\"\n                                        type=\"text\"\n                                        value={values.assetPrice}\n                                        label={localize('Open price of asset')}\n                                        autoComplete=\"off\"\n                                        error={touched.assetPrice && errors.assetPrice}\n                                        onBlur={handleBlur}\n                                        data-lpignore=\"true\"\n                                        handleError={(current_input) => {\n                                            setFieldValue('assetPrice', '', false)\n                                            setFieldError('assetPrice', '')\n                                            setFieldTouched('assetPrice', false, false)\n                                            current_input.focus()\n                                        }}\n                                        maxLength={getMaxLength(values.assetPrice, 15)}\n                                        background=\"white\"\n                                    />\n                                )\n\n                                const StopLossAmountInput = ({\n                                    field,\n                                }: {\n                                    field: React.ReactNode\n                                }) => (\n                                    <Input\n                                        {...field}\n                                        id=\"assetPrice\"\n                                        type=\"text\"\n                                        value={values.stopLossAmount}\n                                        label={localize('Stop loss amount')}\n                                        autoComplete=\"off\"\n                                        error={touched.stopLossAmount && errors.stopLossAmount}\n                                        onBlur={handleBlur}\n                                        data-lpignore=\"true\"\n                                        handleError={stopLossErrorHandler}\n                                        maxLength={getMaxLength(values.stopLossAmount, 15)}\n                                        background=\"white\"\n                                    />\n                                )\n\n                                const PointValueInput = ({ field }: { field: React.ReactNode }) => (\n                                    <Input\n                                        {...field}\n                                        id=\"pointValue\"\n                                        type=\"text\"\n                                        label={localize('Point value')}\n                                        autoComplete=\"off\"\n                                        error={touched.pointValue && errors.pointValue}\n                                        onBlur={handleBlur}\n                                        data-lpignore=\"true\"\n                                        handleError={(current_input) => {\n                                            setFieldValue('pointValue', '', false)\n                                            setFieldError('pointValue', '')\n                                            setFieldTouched('pointValue', false, false)\n                                            current_input.focus()\n                                        }}\n                                        maxLength={getMaxLength(values.pointValue, 8)}\n                                        background=\"white\"\n                                    />\n                                )\n\n                                const takeProfitAmountChangeHandler = (value) => {\n                                    setFieldValue('takeProfitAmount', value)\n                                }\n\n                                const stopLossAmountChangeHandler = (value) => {\n                                    setFieldValue('stopLossAmount', value)\n                                }\n\n                                const TakeProfitAmountInput = ({\n                                    field,\n                                }: {\n                                    field: React.ReactNode\n                                }) => (\n                                    <Input\n                                        {...field}\n                                        id=\"takeProfitAmount\"\n                                        type=\"text\"\n                                        label={localize('Take profit amount')}\n                                        autoComplete=\"off\"\n                                        error={touched.takeProfitAmount && errors.takeProfitAmount}\n                                        onBlur={handleBlur}\n                                        data-lpignore=\"true\"\n                                        handleError={takeProfitErrorHanlder}\n                                        maxLength={getMaxLength(values.takeProfitAmount, 15)}\n                                        background=\"white\"\n                                    />\n                                )\n\n                                return (\n                                    <>\n                                        <Show.Desktop max_width=\"mobileL\">\n                                            <CalculatorForm>\n                                                <CalculatorHeader>\n                                                    <Flex mb=\"24px\">\n                                                        <Flex fd=\"column\" mr=\"24px\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Stop loss pips')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {values.stopLossPips}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                        <Flex fd=\"column\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Stop loss level')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {values.stopLossLevel}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex>\n                                                        <Flex fd=\"column\" mr=\"24px\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Take profit pips')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {values.takeProfitPips}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                        <Flex fd=\"column\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Take profit level')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {values.takeProfitLevel}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                    </Flex>\n                                                </CalculatorHeader>\n\n                                                <CalculatorBody>\n                                                    <CalculatorLabel>\n                                                        {localize('Account type')}\n                                                    </CalculatorLabel>\n                                                    <Flex\n                                                        mb=\"3rem\"\n                                                        mt=\"1rem\"\n                                                        jc=\"space-between\"\n                                                        tablet={{ height: 'unset' }}\n                                                    >\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Synthetic'}\n                                                            onClick={pnlSyntheticHandler}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Synthetic')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Financial'}\n                                                            disabled={sub_tab === 'Financial'}\n                                                            onClick={pnlFinancialHandler}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Financial')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                    </Flex>\n                                                    <Flex jc=\"space-between\">\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <CalculatorDropdown\n                                                                option_list={values.optionList}\n                                                                label={localize('Symbol')}\n                                                                default_option={optionItemDefault}\n                                                                selected_option={values.symbol}\n                                                                id=\"symbol\"\n                                                                onChange={calculatorDropdownHandler}\n                                                                contractSize={values.contractSize}\n                                                                error={\n                                                                    touched.symbol && errors.symbol\n                                                                }\n                                                                onBlur={handleBlur}\n                                                            />\n                                                        </Flex>\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"pointValue\"\n                                                                    value={values.pointValue}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'pointValue',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {PointValueInput}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex jc=\"space-between\" mb=\"17px\">\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"volume\"\n                                                                    value={values.volume}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'volume',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {({ field }) => (\n                                                                        <Input\n                                                                            {...field}\n                                                                            id=\"volume\"\n                                                                            type=\"text\"\n                                                                            label={localize(\n                                                                                'Volume',\n                                                                            )}\n                                                                            autoComplete=\"off\"\n                                                                            error={\n                                                                                touched.volume &&\n                                                                                errors.volume\n                                                                            }\n                                                                            onBlur={handleBlur}\n                                                                            data-lpignore=\"true\"\n                                                                            handleError={(\n                                                                                current_input,\n                                                                            ) => {\n                                                                                setFieldValue(\n                                                                                    'volume',\n                                                                                    '',\n                                                                                    false,\n                                                                                )\n                                                                                setFieldError(\n                                                                                    'volume',\n                                                                                    '',\n                                                                                )\n                                                                                setFieldTouched(\n                                                                                    'volume',\n                                                                                    false,\n                                                                                    false,\n                                                                                )\n                                                                                current_input.focus()\n                                                                            }}\n                                                                            maxLength={getMaxLength(\n                                                                                values.volume,\n                                                                                8,\n                                                                            )}\n                                                                            background=\"white\"\n                                                                        />\n                                                                    )}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"takeProfitAmount\"\n                                                                    value={values.takeProfitAmount}\n                                                                    onChange={\n                                                                        takeProfitAmountChangeHandler\n                                                                    }\n                                                                >\n                                                                    {TakeProfitAmountInput}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex jc=\"space-between\">\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"assetPrice\"\n                                                                    value={values.assetPrice}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'assetPrice',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {AssetPriceInput}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"stopLossAmount\"\n                                                                    value={values.stopLossAmount}\n                                                                    onChange={\n                                                                        stopLossAmountChangeHandler\n                                                                    }\n                                                                >\n                                                                    {StopLossAmountInput}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex mt=\"1.5rem\">\n                                                        <CalculateButton\n                                                            secondary\n                                                            type=\"submit\"\n                                                            disabled={!isValid || !dirty}\n                                                        >\n                                                            {localize('Calculate')}\n                                                        </CalculateButton>\n                                                    </Flex>\n                                                </CalculatorBody>\n                                            </CalculatorForm>\n                                        </Show.Desktop>\n\n                                        <Show.Mobile min_width=\"mobileL\">\n                                            <PnlCalculatorFormMobile>\n                                                <PnlHeaderOverflow>\n                                                    <PnlCalculatorHeaderMobile>\n                                                        <Flex fd=\"column\">\n                                                            <Flex fd=\"column\" mr=\"24px\" mb=\"24px\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Stop loss pips')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {values.stopLossPips}\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                            <Flex fd=\"column\" mb=\"24px\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Stop loss level')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {values.stopLossLevel}\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                        </Flex>\n\n                                                        <Flex fd=\"column\">\n                                                            <Flex fd=\"column\" mr=\"24px\" mb=\"24px\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Take profit pips')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {values.takeProfitPips}\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                            <Flex fd=\"column\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Take profit level')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {values.takeProfitLevel}\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                        </Flex>\n                                                    </PnlCalculatorHeaderMobile>\n                                                </PnlHeaderOverflow>\n\n                                                <CalculatorBody>\n                                                    <CalculatorLabel>\n                                                        {localize('Account type')}\n                                                    </CalculatorLabel>\n                                                    <Flex\n                                                        mb=\"3rem\"\n                                                        mt=\"1rem\"\n                                                        jc=\"space-between\"\n                                                        tablet={{ height: 'unset' }}\n                                                    >\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Synthetic'}\n                                                            onClick={pnlSyntheticHandler}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Synthetic')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Financial'}\n                                                            disabled={sub_tab === 'Financial'}\n                                                            onClick={pnlFinancialHandler}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Financial')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                    </Flex>\n                                                    <CalculatorDropdown\n                                                        option_list={values.optionList}\n                                                        label={localize('Symbol')}\n                                                        default_option={optionItemDefault}\n                                                        selected_option={values.symbol}\n                                                        id=\"symbol\"\n                                                        onChange={calculatorDropdownHandler}\n                                                        contractSize={values.contractSize}\n                                                        error={touched.symbol && errors.symbol}\n                                                        onBlur={handleBlur}\n                                                    />\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"volume\"\n                                                            value={values.volume}\n                                                            onChange={(value) => {\n                                                                setFieldValue('volume', value)\n                                                            }}\n                                                        >\n                                                            {({ field }) => (\n                                                                <Input\n                                                                    {...field}\n                                                                    id=\"volume\"\n                                                                    type=\"text\"\n                                                                    label={localize('Volume')}\n                                                                    autoComplete=\"off\"\n                                                                    error={\n                                                                        touched.volume &&\n                                                                        errors.volume\n                                                                    }\n                                                                    onBlur={handleBlur}\n                                                                    data-lpignore=\"true\"\n                                                                    handleError={(\n                                                                        current_input,\n                                                                    ) => {\n                                                                        setFieldValue(\n                                                                            'volume',\n                                                                            '',\n                                                                            false,\n                                                                        )\n                                                                        setFieldError('volume', '')\n                                                                        setFieldTouched(\n                                                                            'volume',\n                                                                            false,\n                                                                            false,\n                                                                        )\n                                                                        current_input.focus()\n                                                                    }}\n                                                                    maxLength={getMaxLength(\n                                                                        values.volume,\n                                                                        8,\n                                                                    )}\n                                                                    background=\"white\"\n                                                                />\n                                                            )}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"assetPrice\"\n                                                            value={values.assetPrice}\n                                                            onChange={(value) => {\n                                                                setFieldValue('assetPrice', value)\n                                                            }}\n                                                        >\n                                                            {AssetPriceInput}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"pointValue\"\n                                                            value={values.pointValue}\n                                                            onChange={(value) => {\n                                                                setFieldValue('pointValue', value)\n                                                            }}\n                                                        >\n                                                            {PointValueInput}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"takeProfitAmount\"\n                                                            value={values.takeProfitAmount}\n                                                            onChange={takeProfitAmountChangeHandler}\n                                                        >\n                                                            {TakeProfitAmountInput}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"stopLossAmount\"\n                                                            value={values.stopLossAmount}\n                                                            onChange={stopLossAmountChangeHandler}\n                                                        >\n                                                            {StopLossAmountInput}\n                                                        </Field>\n                                                    </InputGroup>\n\n                                                    <Flex mt=\"1.5rem\">\n                                                        <CalculateButton\n                                                            secondary\n                                                            type=\"submit\"\n                                                            disabled={!isValid || !dirty}\n                                                        >\n                                                            {localize('Calculate')}\n                                                        </CalculateButton>\n                                                    </Flex>\n                                                </CalculatorBody>\n                                            </PnlCalculatorFormMobile>\n                                        </Show.Mobile>\n                                    </>\n                                )\n                            }}\n                        </Formik>\n                    </FormWrapper>\n\n                    {tab === 'Buy' ? (\n                        <RightContent>\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize(\n                                    'How to calculate stop loss and/or take profit level and pip value',\n                                )}\n                            </Header>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level and pip value when buying a contract on Deriv MT5 (DMT5) is calculated based on the formula:',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit level = asset price + {stop loss OR take profit amount ÷ (volume × contract size)}</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n                            <Text mb=\"16px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit pip value = |(stop loss OR take profit level - asset price)| ÷ point value</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level helps you to manage your risk when you are buying a contract.',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'For financial accounts, the stop loss and/or take profit pip value is in the quote currency for forex pairs.',\n                                )}\n                            </Text>\n                            <Text mb=\"40px\">\n                                {localize(\n                                    'For synthetic accounts, the stop loss and/or take profit pip value is in USD.',\n                                )}\n                            </Text>\n\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize('Example calculation')}\n                            </Header>\n                            <Text mb=\"16px\">\n                                {localize(\n                                    'Let’s say you want to calculate the stop loss level and pip value when you want to buy a lot of EUR/USD priced at 1.17524 USD with a stop loss amount of 24 USD.',\n                                )}\n                            </Text>\n\n                            <Accordion has_single_state>\n                                <AccordionItem\n                                    header={localize('Stop loss level')}\n                                    header_style={header_style}\n                                    style={{\n                                        padding: '0 0 24px 0',\n                                    }}\n                                    plus\n                                >\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_level_formula}\n                                            alt={localize('stop loss level formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_level_formula_mobile}\n                                            alt={localize('stop loss level formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText>\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    <Localize translate_text=\"The contract size is one standard lot of forex = 100,000 units.\" />\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n                                </AccordionItem>\n\n                                <AccordionItem\n                                    header={localize('Stop loss pip value')}\n                                    header_style={header_style}\n                                    plus\n                                >\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_pip_formula}\n                                            alt={localize('stop loss pip formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_pip_formula_mobile}\n                                            alt={localize('stop loss pip formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText>\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    {localize(\n                                                        'The point value is derived from the current digits of the asset. In this example, the digit is 5, so the point value is 0.00001.',\n                                                    )}\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n\n                                    <Text mt=\"1.6rem\">\n                                        <Localize\n                                            translate_text=\"Your position is automatically closed when your stop loss level is at <0>1.1750</0> and when your stop loss pip value is <0>24 USD</0>.\"\n                                            components={[<strong key={0} />]}\n                                        />\n                                    </Text>\n                                </AccordionItem>\n                            </Accordion>\n\n                            <LinkWrapper height=\"auto\">\n                                {\n                                    <StyledLinkButton\n                                        secondary=\"true\"\n                                        type=\"mt5\"\n                                        external=\"true\"\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        {localize('Go to Deriv MT5 dashboard')}\n                                    </StyledLinkButton>\n                                }\n                            </LinkWrapper>\n                        </RightContent>\n                    ) : (\n                        <RightContent key={tab}>\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize(\n                                    'How to calculate stop loss and/or take profit level and pip value',\n                                )}\n                            </Header>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level and pip value when selling a contract on Deriv MT5 (DMT5) is calculated based on the formula:',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit level = asset price - {stop loss OR take profit amount ÷ (volume × contract size)}</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n                            <Text mb=\"16px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit pip value = |(stop loss OR take profit level - asset price)| ÷ point value</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level helps you to manage your risk when you are selling a contract.',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'For financial accounts, the stop loss and/or take profit pip value is in the quote currency for forex pairs.',\n                                )}\n                            </Text>\n                            <Text mb=\"40px\">\n                                {localize(\n                                    'For synthetic accounts, the stop loss and/or take profit pip value is in USD.',\n                                )}\n                            </Text>\n\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize('Example calculation')}\n                            </Header>\n                            <Text mb=\"16px\">\n                                {localize(\n                                    'Let’s say you want to calculate the take profit level and pip value when you want to sell 3 lots of Volatility 50 Index priced at 249.5961 USD with a take profit amount of 84 USD.',\n                                )}\n                            </Text>\n\n                            <Accordion has_single_state>\n                                <AccordionItem\n                                    header={localize('Take profit level')}\n                                    header_style={header_style}\n                                    style={{\n                                        padding: '0 0 24px 0',\n                                    }}\n                                    plus\n                                >\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_level_formula}\n                                            alt={localize('take profit level formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_level_formula_mobile}\n                                            alt={localize('take profit level formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText>\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    <Localize translate_text=\"The contract size is one standard lot of Volatility 50 Index = 1.\" />\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n                                </AccordionItem>\n\n                                <AccordionItem\n                                    header={localize('Take profit pip value')}\n                                    header_style={header_style}\n                                    plus\n                                >\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_pip_formula}\n                                            alt={localize('take profit pip formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_pip_formula_mobile}\n                                            alt={localize('take profit pip formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText>\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    {localize(\n                                                        'The point value is derived from the current digits of the asset. In this example, the digit is 4, so the point value is 0.0001.',\n                                                    )}\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n\n                                    <Text mt=\"1.6rem\">\n                                        <Localize\n                                            translate_text=\"Your position is automatically closed when your take profit level is at <0>221.5961</0> and the pip value is <0>280,000 USD</0>.\"\n                                            components={[<strong key={0} />]}\n                                        />\n                                    </Text>\n                                </AccordionItem>\n                            </Accordion>\n\n                            <LinkWrapper height=\"auto\">\n                                {\n                                    <StyledLinkButton\n                                        secondary=\"true\"\n                                        type=\"mt5\"\n                                        external=\"true\"\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        {localize('Go to Deriv MT5 dashboard')}\n                                    </StyledLinkButton>\n                                }\n                            </LinkWrapper>\n                        </RightContent>\n                    )}\n                </ContentContainer>\n            </StyledSection>\n        </>\n    )\n}\n\nexport default PnlMarginCalculator\n","import React from 'react'\nimport { Hero, StyledHeader } from '../common/_style'\nimport PnLMarginCalculatorSection from './_pnl-margin-calculator'\nimport { Container, SEO } from 'components/containers'\nimport { localize, WithIntl } from 'components/localization'\nimport Layout from 'components/layout/layout'\n\nconst PnLMarginCalculator = () => {\n    return (\n        <Layout>\n            <SEO\n                title={localize('PnL Margin Calculator')}\n                description={localize('PnL Margin Calculator')}\n            />\n            <Hero jc=\"center\" ai=\"center\">\n                <Container>\n                    <StyledHeader as=\"h1\" type=\"display-title\" color=\"white\" align=\"center\">\n                        {localize('Stop loss and/or take profit calculator for margin')}\n                    </StyledHeader>\n                </Container>\n            </Hero>\n            <PnLMarginCalculatorSection />\n        </Layout>\n    )\n}\nexport default WithIntl()(PnLMarginCalculator)\n"],"names":["optionItemDefault","name","display_name","key","icon","market","leverageItemLists","syntheticItemLists","React","src","BOOM1000","alt","BOOM500","CRASH1000","CRASH500","RANGEBREAK100","RANGEBREAK200","STEPINDICES","INDEX10S1","INDEX10","INDEX25S1","INDEX25","INDEX50S1","INDEX50","INDEX75S1","INDEX75","INDEX100S1","INDEX100","financialItemLists","AAL","AAPL","ABNB","ADS","AIG","AMZN","BA","BABA","BAC","BAY","BIIB","BMW","C","CRM","CSCO","DAL","DBK","DIS","EBAY","FB","FDX","GM","GOOGL","GS","HPQ","IBM","INTC","JNJ","JPM","KO","MA","MCD","MRNA","MSFT","NFLX","NKE","NVDA","PFE","PG","PYPL","TEVA","TSLA","TWTR","UBER","V","WMT","ZM","AUS200","ESP35","EUR50","FRA40","UK100","JP225","NED25","US500","US100","US30","CLBRENT","BCHUSD","BTCUSD","DSHUSD","EOSUSD","LTCUSD","XRPUSD","AUDCAD","AUDCHF","AUDJPY","AUDNZD","AUDUSD","EURCAD","EURCHF","EURGBP","EURJPY","EURNZD","EURUSD","GBPCHF","GBPJPY","GBPUSD","NZDUSD","USDCAD","USDCHF","USDJPY","CADCHF","CADJPY","GBPAUD","GBPCAD","GBPNZD","NZDCAD","NZDJPY","USDZAR","CHFJPY","OILUSD","GOLDUSD","SILVERUSD","PALLADIUMUSD","PLATINUMUSD","AUDBASKET","GBPBASKET","EURBASKET","USDBASKET","GOLDBASKET","data","useStaticQuery","formik_ref","useRef","form","current","useState","tab","setTab","sub_tab","setSubTab","stop_loss_output","setStopLossOutput","take_profit_output","setTakeProfitOutput","onTabClick","t","resetForm","setErrors","setFieldValue","onSubTabClick","values","pointValue","getPnlMarginCommon","BreadCrumbContainer","Flex","jc","ai","LocalizedLinkText","to","color","localize","RightArrow","height","width","style","margin","Text","StyledSection","direction","SectionSubtitle","as","type","align","weight","mt","mb","tablet","SwapTabSelector","active","onClick","size","ContentContainer","FormWrapper","Formik","innerRef","enableReinitialize","initialValues","accountType","pnlMarginSymbol","stopLossPips","stopLossLevel","takeProfitPips","takeProfitLevel","symbol","volume","takeProfitAmount","optionList","contractSize","assetPrice","stopLossAmount","validate","resetValidationPnlMargin","onSubmit","numberSubmitFormat","handleBlur","errors","touched","setFieldError","setFieldTouched","isValid","dirty","pnlSyntheticHandler","pnlFinancialHandler","calculatorDropdownHandler","value","getCurrency","getContractSize","takeProfitErrorHanlder","current_input","focus","stopLossErrorHandler","AssetPriceInput","field","Input","id","label","autoComplete","error","onBlur","handleError","maxLength","getMaxLength","background","StopLossAmountInput","PointValueInput","takeProfitAmountChangeHandler","stopLossAmountChangeHandler","TakeProfitAmountInput","Show","max_width","CalculatorForm","CalculatorHeader","fd","mr","CalculatorLabel","htmlFor","PnLCalculatorOutputContainer","PnLCalculatorOutputField","PnLCalculatorOutputSymbol","CalculatorBody","PnlCalculatorTabItem","disabled","CalculatorDropdown","option_list","default_option","selected_option","onChange","PnLInputGroup","Field","CalculateButton","secondary","min_width","PnlCalculatorFormMobile","PnlHeaderOverflow","PnlCalculatorHeaderMobile","InputGroup","RightContent","Header","Localize","translate_text","components","Accordion","has_single_state","AccordionItem","header","header_style","padding","plus","QueryImage","stop_loss_level_formula","stop_loss_level_formula_mobile","FormulaText","StyledOl","stop_loss_pip_formula","stop_loss_pip_formula_mobile","LinkWrapper","StyledLinkButton","external","target","rel","take_profit_level_formula","take_profit_level_formula_mobile","take_profit_pip_formula","take_profit_pip_formula_mobile","WithIntl","Layout","SEO","title","description","Hero","Container","StyledHeader","PnLMarginCalculatorSection"],"sourceRoot":""}