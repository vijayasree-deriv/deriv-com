{"version":3,"file":"8647-559f7a0b8576f502eceb.js","mappings":"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","sources":["webpack://deriv-com/./src/images/common/interim/check-interim-bg.png","webpack://deriv-com/./src/images/common/interim/interim-mobile-bg.png","webpack://deriv-com/./src/pages/interim/_love-trading.tsx","webpack://deriv-com/./src/pages/interim/deriv/_love-trading.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/check-interim-bg-ad9bd6fb0ac1113a4875d49f3ce5acf8.png\";","export default __webpack_public_path__ + \"static/interim-mobile-bg-d4f97b2cabc89f6d0af860e379107246.png\";","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport CtaBinary from './_cta-binary'\nimport { Container, Flex, Box } from 'components/containers'\nimport { Header, QueryImage } from 'components/elements'\nimport { LinkButton } from 'components/form'\nimport device from 'themes/device'\nimport Platform from 'images/common/interim/check-interim-bg.png'\nimport PlatformMobile from 'images/common/interim/interim-mobile-bg.png'\nimport { DerivStore } from 'store'\ntype SectionProps = {\n    image: string\n    mobile_image: string\n}\n\nconst Section = styled(Box)<SectionProps>`\n    width: 100%;\n    height: 350px;\n    background-image: url(${(props) => props.image || Platform});\n    background-size: 65% 100%;\n    background-position-x: right;\n    background-repeat: no-repeat;\n    position: relative;\n    margin-bottom: ${(props) => props.is_eu_country && '7.3rem'};\n    @media ${device.tabletL} {\n        height: 700px;\n        background-image: url(${(props) => props.mobile_image || PlatformMobile});\n        background-size: 100% 63%;\n        background-position-y: bottom;\n        background-repeat: no-repeat;\n    }\n`\n\nconst Responsive = styled(Container)`\n    @media ${device.tabletL} {\n        flex-direction: column;\n    }\n`\n\nconst AbsoluteWrapper = styled(Box)`\n    width: 54rem;\n    position: absolute;\n    left: 30%;\n    bottom: 0;\n\n    @media (max-width: 1565px) {\n        left: 28%;\n\n        .gatsby-image-wrapper {\n            width: 50rem;\n        }\n    }\n    @media (max-width: 1390px) {\n        .gatsby-image-wrapper {\n            width: 44rem;\n        }\n    }\n    @media (max-width: 1300px) {\n        .gatsby-image-wrapper {\n            width: 35rem;\n        }\n    }\n    @media (max-width: 1146px) {\n        .gatsby-image-wrapper {\n            width: 30rem;\n        }\n    }\n    @media ${device.tabletL} {\n        display: none;\n    }\n`\n\nconst MobileWrapper = styled.div`\n    display: none;\n\n    @media ${device.tabletL} {\n        display: block;\n        margin: 3.2rem 0;\n    }\n`\n\nconst FitButton = styled(LinkButton)`\n    width: fit-content;\n`\n\nconst query = graphql`\n    query {\n        affiliate: file(relativePath: { eq: \"interim/affiliate.png\" }) {\n            ...fadeIn\n        }\n        smart_trader: file(relativePath: { eq: \"interim/smarttrader.png\" }) {\n            ...fadeIn\n        }\n        dmt5: file(relativePath: { eq: \"interim/interim-dmt5.png\" }) {\n            ...fadeIn\n        }\n        dbot: file(relativePath: { eq: \"interim/interim-dbot.png\" }) {\n            ...fadeIn\n        }\n    }\n`\n\nconst StyledLeftContainer = styled(Flex)`\n    @media ${device.tabletL} {\n        height: 210px;\n        max-width: unset;\n    }\n`\n\ntype LeftCTASectionProps = {\n    header: React.ReactElement | string\n    button_url?: string\n    button_text?: React.ReactElement | string\n    hide_cta?: boolean\n    cta_props?: { is_white?: boolean }\n    custom_content?: React.ReactElement\n}\n\nconst LeftCTASection = (params: LeftCTASectionProps) => {\n    const { button_text, button_url, cta_props, header, hide_cta } = params\n    return (\n        <>\n            <Header as=\"h3\" type=\"section-title\" mb=\"4rem\" align=\"center\" tabletL={{ mb: '34px' }}>\n                {header}\n            </Header>\n            <FitButton secondary to={button_url}>\n                {button_text}\n            </FitButton>\n            {!hide_cta && <CtaBinary {...(cta_props || {})} />}\n        </>\n    )\n}\n\ntype RightCTASectionProps = LeftCTASectionProps & {\n    button_props?: unknown\n}\n\nconst RightCTASection = (params: RightCTASectionProps) => {\n    const { button_props, button_text, button_url, cta_props, header, hide_cta } = params\n    return (\n        <Flex width=\"auto\" fd=\"column\" ai=\"center\" ml=\"0\" max_width=\"38.4rem\">\n            <Header as=\"h3\" color=\"white\" type=\"section-title\" mb=\"3rem\" align=\"center\">\n                {header}\n            </Header>\n            <FitButton\n                external=\"true\"\n                white\n                to={button_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                {...(button_props || {})}\n            >\n                {button_text}\n            </FitButton>\n            {!hide_cta && <CtaBinary {...(cta_props || {})} />}\n        </Flex>\n    )\n}\n\ntype LoveTradingComponentProps = {\n    left: LeftCTASectionProps\n    right: RightCTASectionProps\n    bg_image?: string\n    bg_image_mobile?: string\n    image: string\n}\n\nexport const LoveTradingComponent = ({\n    bg_image,\n    bg_image_mobile,\n    image,\n    left,\n    right,\n}: LoveTradingComponentProps) => {\n    const data = useStaticQuery(query)\n    const { is_eu_country } = React.useContext(DerivStore)\n    return (\n        <Section\n            p=\"3.2rem 0\"\n            image={bg_image}\n            mobile_image={bg_image_mobile}\n            is_eu_country={is_eu_country}\n        >\n            <AbsoluteWrapper>\n                <QueryImage data={data[image]} width=\"54rem\" alt=\"Love trading\" />\n            </AbsoluteWrapper>\n            <Responsive jc=\"space-between\" position=\"relative\">\n                <StyledLeftContainer fd=\"column\" ai=\"center\" max_width=\"28.2rem\">\n                    {left.custom_content || <LeftCTASection {...left} />}\n                </StyledLeftContainer>\n                <MobileWrapper>\n                    <QueryImage data={data[image]} width=\"30rem\" alt=\"Love trading\" />\n                </MobileWrapper>\n                {right.custom_content || <RightCTASection {...right} />}\n            </Responsive>\n        </Section>\n    )\n}\n","import React from 'react'\nimport { LoveTradingComponent } from '../_love-trading'\nimport { Localize } from 'components/localization'\n\nconst content = {\n    left: {\n        header: <Localize translate_text=\"Be among the first to try Deriv.com\" />,\n        button_text: <Localize translate_text=\"Visit Deriv.com now\" />,\n        button_url: '/',\n    },\n    image: 'smart_trader',\n    right: {\n        header: <Localize translate_text=\"Love trading on Binary.comâ€™s signature platform?\" />,\n        button_text: <Localize translate_text=\"Try SmartTrader on Deriv.com\" />,\n        button_url: 'trading',\n        button_props: { type: 'smart_trader' },\n        cta_props: { is_white: true },\n    },\n}\n\nconst LoveTrading = () => <LoveTradingComponent {...content} />\n\nexport default LoveTrading\n"],"names":["Section","styled","Box","withConfig","props","image","Platform","is_eu_country","device","mobile_image","PlatformMobile","Responsive","Container","AbsoluteWrapper","MobileWrapper","FitButton","LinkButton","StyledLeftContainer","Flex","LeftCTASection","params","button_text","button_url","cta_props","header","hide_cta","React","Header","as","type","mb","align","tabletL","secondary","to","CtaBinary","RightCTASection","button_props","width","fd","ai","ml","max_width","color","external","white","target","rel","LoveTradingComponent","bg_image","bg_image_mobile","left","right","data","useStaticQuery","DerivStore","p","QueryImage","alt","jc","position","custom_content","content","Localize","translate_text","is_white"],"sourceRoot":""}