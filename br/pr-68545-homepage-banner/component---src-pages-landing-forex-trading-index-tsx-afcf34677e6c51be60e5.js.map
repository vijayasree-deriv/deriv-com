{"version":3,"file":"component---src-pages-landing-forex-trading-index-tsx-afcf34677e6c51be60e5.js","mappings":"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","sources":["webpack://deriv-com/./src/pages/home/_lazy-load.tsx","webpack://deriv-com/./src/pages/landing/forex-trading/components/_hero.tsx","webpack://deriv-com/./src/pages/landing/forex-trading/components/_image-text-switching.tsx","webpack://deriv-com/./src/pages/landing/forex-trading/components/_table-btn.tsx","webpack://deriv-com/./src/pages/landing/forex-trading/index.tsx"],"sourcesContent":["import Loadable from '@loadable/component'\n\nexport const Markets = Loadable(() => import('./_markets'))\nexport const TradeTypes = Loadable(() => import('./_trade-types'))\nexport const OurPlatforms = Loadable(() => import('./_our_platforms'))\nexport const WhatOurClientsSay = Loadable(() => import('./_what-our-clients-say'))\nexport const SimpleSteps = Loadable(() => import('components/custom/_simple-steps'))\nexport const Signup = Loadable(() => import('components/custom/signup'))\nexport const P2PHomeBanner = Loadable(() => import('./_p2p_home_banner'))\n","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { Flex, Container, Desktop, Mobile } from 'components/containers'\nimport { Header } from 'components/elements'\nimport { localize } from 'components/localization'\nimport { Background } from 'components/elements/background-image'\nimport { LinkButton } from 'components/form'\nimport device from 'themes/device'\n\ntype HeroComponentProps = {\n    background_data: string\n    content: React.ReactNode\n    title: string\n}\n\ntype HeroProps = {\n    content: React.ReactNode\n    title: string\n}\n\nconst BackgroundWrapper = styled(Background)`\n    background-size: cover;\n    background-position: bottom right;\n`\n\nconst Wrapper = styled(Container)`\n    @media ${device.tabletS} {\n        height: 70rem;\n        margin-left: 0;\n        padding: 2rem 16px 0;\n        flex-direction: column-reverse;\n        justify-content: center;\n    }\n`\n\nconst InformationWrapper = styled(Flex)`\n    width: 100%;\n    max-width: 75rem;\n    z-index: 1;\n\n    @media ${device.tabletL} {\n        max-width: 55rem;\n        top: 280px;\n        padding: 0 16px;\n    }\n    @media ${device.mobileL} {\n        max-width: 390px;\n        padding: 0;\n    }\n`\n\nconst StyledHeader = styled(Header)`\n    display: flex;\n\n    @media ${device.tabletL} {\n        margin-top: 1.5rem;\n    }\n    @media ${device.mobileS} {\n        margin-top: 18px;\n    }\n`\n\nconst HeroContent = styled(Flex)`\n    height: unset;\n\n    ${Header} {\n        display: flex;\n        margin-top: 1rem;\n    }\n\n    @media ${device.mobileL} {\n        ${Header} {\n            margin: 10px 0 0;\n        }\n    }\n`\n\nconst TryButton = styled(LinkButton)`\n    padding: 17px 24px;\n    width: min-content;\n    white-space: nowrap;\n    font-size: 18px;\n    border: unset;\n\n    @media ${device.tablet} {\n        padding: 14px 18px;\n        font-size: 14px;\n        margin-top: 40px;\n        font-weight: 700;\n    }\n    @media ${device.mobileL} {\n        margin-top: 20px;\n    }\n    @media ${device.mobileS} {\n        margin-top: 10px;\n    }\n`\n\nconst HeroComponent = ({ title, content, background_data }: HeroComponentProps) => {\n    return (\n        <BackgroundWrapper data={background_data}>\n            <Wrapper p=\"0\" justify=\"space-between\" height=\"63rem\">\n                <InformationWrapper height=\"unset\" direction=\"column\">\n                    <StyledHeader mt=\"6.2rem\" type=\"hero\" color=\"white\">\n                        {title}\n                    </StyledHeader>\n                    <HeroContent m=\"2rem 0 0\" direction=\"column\" justify=\"flex-start\">\n                        <Header color=\"white\" type=\"subtitle-1\" weight=\"normal\">\n                            {content}\n                        </Header>\n                    </HeroContent>\n                    <TryButton\n                        m=\"3rem 0 80px\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer nofollow\"\n                        type=\"submit\"\n                        secondary=\"true\"\n                        to={'/signup/'}\n                    >\n                        {localize('Start trading')}\n                    </TryButton>\n                </InformationWrapper>\n            </Wrapper>\n        </BackgroundWrapper>\n    )\n}\n\nconst query = graphql`\n    query {\n        p2p_hero_background: file(relativePath: { eq: \"landing/trade-fx.jpg\" }) {\n            ...fadeIn\n        }\n        p2p_hero_background_mobile: file(relativePath: { eq: \"landing/trade-fx-m.jpg\" }) {\n            ...fadeIn\n        }\n    }\n`\n\nconst Hero = ({ title, content }: HeroProps) => {\n    const data = useStaticQuery(query)\n\n    return (\n        <div>\n            <Desktop>\n                <HeroComponent\n                    title={title}\n                    content={content}\n                    background_data={data['p2p_hero_background']}\n                />\n            </Desktop>\n            <Mobile>\n                <HeroComponent\n                    title={title}\n                    content={content}\n                    background_data={data['p2p_hero_background_mobile']}\n                />\n            </Mobile>\n        </div>\n    )\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport device from 'themes/device'\nimport { Container, SectionContainer, Desktop, Mobile } from 'components/containers'\nimport { Header, Text, QueryImage } from 'components/elements'\nimport { localize } from 'components/localization'\nimport { isIndexEven } from 'common/utility'\n\ntype P2PType = {\n    title: React.ReactNode\n    subtitle1: React.ReactNode\n    subtitle_mobile1: React.ReactNode\n    second_title?: string\n    second_subtitle1?: string\n    image_alt: string\n    image_name: string\n}[]\n\ntype ImageTextSwitchingProps = {\n    P2P: P2PType\n    reverse: boolean\n    two_title?: string\n}\n\ntype ContentProps = {\n    margin_right: string\n}\n\ntype ImageWrapperProps = {\n    margin_right: string\n}\n\ntype RowProps = {\n    flex_direction: string\n}\n\nconst StyledSection = styled(SectionContainer)`\n    @media ${device.tabletL} {\n        padding: 40px 16px;\n    }\n`\nconst StyledContainer = styled(Container)`\n    @media ${device.tabletL} {\n        width: 100%;\n    }\n`\n\nconst Content = styled.div<ContentProps>`\n    width: 45%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-right: ${(props) => props.margin_right};\n    @media ${device.tabletL} {\n        width: 90%;\n    }\n\n    ${Text} {\n        font-weight: 350;\n        @media ${device.tabletL} {\n            font-weight: 400;\n            font-size: 18px;\n            text-align: center;\n        }\n    }\n\n    @media ${device.tabletL} {\n        margin: 0 auto;\n    }\n`\nconst ImageWrapper = styled.div<ImageWrapperProps>`\n    width: 40%;\n    margin-right: ${(props) => props.margin_right};\n\n    @media ${device.tabletL} {\n        width: 100%;\n        max-width: 400px;\n        margin: 2rem auto;\n    }\n`\nconst StyledHeader = styled(Header)`\n    @media ${device.tabletL} {\n        width: 98%;\n        margin-top: 0;\n        text-align: center;\n    }\n`\nconst StyledText = styled(Text)`\n    @media ${device.tabletL} {\n        line-height: 30px;\n    }\n`\nconst Row = styled.div<RowProps>`\n    justify-content: space-around;\n    flex-direction: ${(props) => props.flex_direction};\n    width: 85%;\n    display: flex;\n    margin-top: 9rem;\n\n    &:first-child {\n        margin-top: 0;\n    }\n\n    @media ${device.tabletL} {\n        flex-direction: column;\n        margin-top: 40px;\n    }\n`\n\nconst query = graphql`\n    query {\n        login: file(relativePath: { eq: \"landing/login.png\" }) {\n            ...fadeIn\n        }\n        dmt5_acc: file(relativePath: { eq: \"landing/dmt5-acc.png\" }) {\n            ...fadeIn\n        }\n        dmt5_login: file(relativePath: { eq: \"landing/dmt5-login.png\" }) {\n            ...fadeIn\n        }\n    }\n`\nconst ImageTextSwitching = ({ P2P, reverse, two_title }: ImageTextSwitchingProps) => {\n    const data = useStaticQuery(query)\n    return (\n        <StyledSection background=\"var(--color-white)\" padding=\"10rem 0\">\n            <StyledContainer direction=\"column\">\n                <StyledText\n                    align=\"center\"\n                    lh=\"4rem\"\n                    size=\"var(--text-size-l)\"\n                    mb=\"1rem\"\n                    weight=\"bold\"\n                >\n                    {localize('Trade forex with ultra-low spreads in 3 simple steps:')}\n                </StyledText>\n\n                {P2P.map((item, index) => {\n                    const is_even = isIndexEven(index, reverse)\n                    return (\n                        <Row flex_direction={!is_even ? 'row' : 'row-reverse'} key={index}>\n                            <Content margin_right={!is_even ? '12.6rem' : '0'}>\n                                <StyledHeader type=\"heading-3\" mb=\"1rem\">\n                                    {item.title}\n                                </StyledHeader>\n                                <Desktop>\n                                    <Text size=\"var(--text-size-m)\" pb=\"2rem\">\n                                        {item.subtitle1}\n                                    </Text>\n                                </Desktop>\n                                <Mobile>\n                                    <Text pb=\"2rem\">{item.subtitle_mobile1}</Text>\n                                </Mobile>\n                                {two_title && (\n                                    <>\n                                        <StyledHeader type=\"heading-3\">\n                                            {item.second_title}\n                                        </StyledHeader>\n                                        <Text>{item.second_subtitle1}</Text>\n                                    </>\n                                )}\n                            </Content>\n                            <ImageWrapper margin_right={!is_even ? '0' : '12.6rem'}>\n                                <QueryImage data={data[item.image_name]} alt={item.image_alt} />\n                            </ImageWrapper>\n                        </Row>\n                    )\n                })}\n            </StyledContainer>\n        </StyledSection>\n    )\n}\n\nexport default ImageTextSwitching\n","import React from 'react'\nimport styled from 'styled-components'\nimport MarketInstruments from '../../../markets/components/sections/_market_instruments'\nimport { SwapFreePairs } from '../../../markets/instruments/_submarkets'\nimport device from 'themes/device'\nimport { Container, SectionContainer } from 'components/containers'\nimport { Localize } from 'components/localization'\nimport { Text } from 'components/elements'\nimport { LinkButton } from 'components/form'\n\ntype TablebtnProps = {\n    btnlabel: string\n    text: string\n}\n\nconst StyledSection = styled(SectionContainer)`\n    @media ${device.tabletL} {\n        padding: 40px 16px;\n    }\n`\n\nconst StyledContainer = styled(Container)`\n    @media ${device.tabletL} {\n        width: 100%;\n    }\n`\n\nconst StyledText = styled(Text)`\n    @media ${device.tabletL} {\n        font-size: 16px;\n        line-height: 30px;\n    }\n`\n\nconst TryButton = styled(LinkButton)`\n    @media ${device.mobileL} {\n        white-space: nowrap;\n        margin-bottom: 2rem;\n    }\n    @media ${device.mobileL} {\n        margin-top: 24px 0 40px;\n    }\n`\n\nconst Tablebtn = ({ btnlabel, text }: TablebtnProps) => {\n    const swap_free_pairs = {\n        markets_list: {\n            col: 4,\n            tablet_col: 3,\n            mobile_col: 2,\n        },\n        content: [\n            {\n                title: <Localize translate_text=\"Swap-free pairs\" />,\n                component: <SwapFreePairs />,\n            },\n        ],\n    }\n\n    return (\n        <StyledSection background=\"var(--color-grey-30)\" padding=\"3rem 0\">\n            <StyledContainer direction=\"column\">\n                <StyledText width=\"100%\" size=\"1.7rem\">\n                    {text}\n                </StyledText>\n                <MarketInstruments market_content={swap_free_pairs} />\n                <TryButton\n                    m=\"4.2rem 0 40px\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer nofollow\"\n                    type=\"submit\"\n                    secondary=\"true\"\n                    to={'/signup/'}\n                >\n                    {btnlabel}\n                </TryButton>\n            </StyledContainer>\n        </StyledSection>\n    )\n}\n\nexport default Tablebtn\n","import React from 'react'\nimport Loadable from '@loadable/component'\nimport { Signup, WhatOurClientsSay } from '../../home/_lazy-load'\nimport Hero from './components/_hero'\nimport ImageTextSwitching from './components/_image-text-switching'\nimport Tablebtn from './components/_table-btn'\nimport { usePageLoaded } from 'components/hooks/use-page-loaded'\nimport { localize, Localize, WithIntl } from 'components/localization'\nimport { Appearances } from 'components/custom/signup'\nimport Layout from 'components/layout/layout'\nimport { SEO } from 'components/containers'\nconst IconTextRow = Loadable(() => import('./components/_icon-text-row'))\n\nconst DP2P_CONTENT = [\n    {\n        title: <Localize translate_text=\"Step 1\" />,\n        subtitle1: (\n            <Localize\n                translate_text=\"Log in or sign up for a Deriv account.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n        subtitle_mobile1: (\n            <Localize\n                translate_text=\"Log in or sign up for a Deriv account.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n\n        image_name: 'login',\n        image_alt: localize('Login'),\n    },\n    {\n        title: <Localize translate_text=\"Step 2\" />,\n        subtitle1: (\n            <Localize\n                translate_text=\"Add a Deriv MT5 Financial real account.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n        subtitle_mobile1: (\n            <Localize\n                translate_text=\"Add a Deriv MT5 Financial real account.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n\n        image_name: 'dmt5_acc',\n        image_alt: localize('DMT5 account'),\n    },\n    {\n        title: <Localize translate_text=\"Step 3\" />,\n        subtitle1: (\n            <Localize\n                translate_text=\"Log in to Deriv MT5, select an asset, and start trading.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n        subtitle_mobile1: (\n            <Localize\n                translate_text=\"Log in to Deriv MT5, select an asset, and start trading.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n\n        image_name: 'dmt5_login',\n        image_alt: localize('DMT5 login'),\n    },\n]\n\nconst ForexTrading = () => {\n    const [is_mounted] = usePageLoaded(false) // needed to fix the second Hero-component during page's loading\n    return (\n        <Layout type=\"landing-page\" is_ppc_redirect={true}>\n            <SEO\n                title={localize('Weekends')}\n                description={localize('Ride the trends even on weekends')}\n            />\n            {is_mounted && (\n                <>\n                    <Hero\n                        title={localize('Take advantage of the best trading conditions by Deriv')}\n                        content={\n                            <Localize translate_text=\"Your trusted broker with intuitive forex trading platforms, convenient payment options, and a 24/7 support team.\" />\n                        }\n                    />\n                    <IconTextRow />\n                    <Tablebtn\n                        btnlabel={localize('Get trading on Deriv')}\n                        text={localize('*available for selected pairs:')}\n                    />\n                    <ImageTextSwitching reverse P2P={DP2P_CONTENT} />\n                    <WhatOurClientsSay />\n                    <Signup appearance={Appearances.public} />\n                </>\n            )}\n        </Layout>\n    )\n}\n\nexport default WithIntl()(ForexTrading)\n"],"names":["Markets","Loadable","TradeTypes","OurPlatforms","WhatOurClientsSay","SimpleSteps","Signup","P2PHomeBanner","BackgroundWrapper","styled","Background","withConfig","Wrapper","Container","device","InformationWrapper","Flex","StyledHeader","Header","HeroContent","TryButton","LinkButton","HeroComponent","title","content","background_data","React","data","p","justify","height","direction","mt","type","color","m","weight","target","rel","secondary","to","localize","useStaticQuery","Desktop","Mobile","StyledSection","SectionContainer","StyledContainer","Content","props","margin_right","Text","ImageWrapper","StyledText","Row","flex_direction","P2P","reverse","two_title","background","padding","align","lh","size","mb","map","item","index","is_even","isIndexEven","key","pb","subtitle1","subtitle_mobile1","second_title","second_subtitle1","QueryImage","image_name","alt","image_alt","btnlabel","text","swap_free_pairs","markets_list","col","tablet_col","mobile_col","Localize","translate_text","component","SwapFreePairs","width","MarketInstruments","market_content","IconTextRow","DP2P_CONTENT","components","WithIntl","is_mounted","usePageLoaded","Layout","is_ppc_redirect","SEO","description","Hero","Tablebtn","ImageTextSwitching","appearance","Appearances"],"sourceRoot":""}