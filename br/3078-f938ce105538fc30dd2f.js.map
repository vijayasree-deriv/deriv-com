{"version":3,"file":"3078-f938ce105538fc30dd2f.js","mappings":"yLAQMA,GAAkBC,EAAAA,EAAAA,SAAOC,EAAAA,IAAV,wFAAGD,CAAH,uEAGRE,EAAAA,EAAAA,SAIPC,GAAUH,EAAAA,EAAAA,SAAOI,EAAAA,IAAV,gFAAGJ,CAAH,4IAIO,SAACK,GAAD,OAAWA,EAAMC,eAE/BC,EAAAA,GAIOL,EAAAA,EAAAA,SAIPM,GAAeR,EAAAA,EAAAA,SAAOS,EAAAA,IAAV,qFAAGT,CAAH,mCACLE,EAAAA,EAAAA,SAKPQ,GAAaV,EAAAA,EAAAA,SAAOO,EAAAA,IAAV,mFAAGP,CAAH,kDACHE,EAAAA,EAAAA,SAMPS,GAAMX,EAAAA,EAAAA,SAAOI,EAAAA,IAAV,4EAAGJ,CAAH,gJAKe,SAACK,GAAD,OAAWA,EAAMC,eACxBJ,EAAAA,EAAAA,QAIJA,EAAAA,EAAAA,SAuEb,UAnDuB,SAAC,GAAiC,IAA/BU,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAC9BC,GAAOC,EAAAA,EAAAA,gBAjBN,cAkBP,OACI,wBAAC,KAAD,CACIC,EAAE,kBACFC,WAAW,yBACXC,QAAS,CAAEC,GAAI,SAEf,wBAACrB,EAAD,KACKa,EAAIS,KAAI,SAACC,EAAMC,GACZ,IAAIC,EAAUX,GAAWU,EAAQ,GAAK,EAAIA,EAAQ,EAClD,OACI,wBAACZ,EAAD,CACIc,GAAKD,EAAkB,cAAR,MACfE,IAAKH,EACLjB,aAAekB,EAAgB,UAAN,KAEzB,wBAACrB,EAAD,CAASG,aAAekB,EAAsB,IAAZ,WAC9B,wBAAChB,EAAD,CAAcmB,GAAG,KAAKC,KAAK,aACtBN,EAAKO,OAEV,wBAACnB,EAAD,KAAaY,EAAKQ,UACjBhB,GACG,gDACI,wBAACN,EAAD,CAAcmB,GAAG,KAAKC,KAAK,YAAYG,GAAG,UACrCT,EAAKU,cAEV,wBAACtB,EAAD,KAAaY,EAAKW,mBAI9B,wBAAC,KAAD,CACIlB,KAAMA,EAAKO,EAAKY,YAChBC,IAAKb,EAAKc,UACVC,MAAM,OACNC,UAAU","sources":["webpack://deriv-com/./src/pages/deriv-go/_deriv-go-content.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport device from 'themes/device'\nimport { Container, Flex, SectionContainer } from 'components/containers'\nimport { Header, Text, QueryImage } from 'components/elements'\n\nconst StyledContainer = styled(Container)`\n    flex-direction: column;\n    max-width: 996px;\n    @media ${device.tabletL} {\n        max-width: 360px;\n    }\n`\nconst Content = styled(Flex)`\n    width: 100%;\n    max-width: 38.4rem;\n    flex-direction: column;\n    margin-right: ${(props) => props.margin_right};\n\n    ${Text} {\n        font-size: 2.4rem;\n        margin-top: 0.8rem;\n    }\n    @media ${device.tabletL} {\n        margin: 0 auto;\n    }\n`\nconst StyledHeader = styled(Header)`\n    @media ${device.tabletL} {\n        text-align: center;\n    }\n`\n\nconst StyledText = styled(Text)`\n    @media ${device.tabletL} {\n        text-align: center;\n        font-size: 18px;\n    }\n`\n\nconst Row = styled(Flex)`\n    align-items: center;\n\n    & .content-wrapper {\n        width: 100%;\n        margin-right: ${(props) => props.margin_right};\n        @media ${device.tabletL} {\n            margin: 2rem auto;\n        }\n    }\n    @media ${device.tabletL} {\n        flex-direction: column-reverse;\n    }\n`\nconst query = graphql`\n    query {\n        multiply_profit: file(relativePath: { eq: \"deriv-go/multiply-profit.png\" }) {\n            ...fadeIn\n        }\n        forex: file(relativePath: { eq: \"deriv-go/forex.png\" }) {\n            ...fadeIn\n        }\n        synthetic_indices: file(relativePath: { eq: \"deriv-go/synthetic-indices.png\" }) {\n            ...fadeIn\n        }\n        better_risk: file(relativePath: { eq: \"deriv-go/better-risk.png\" }) {\n            ...fadeIn\n        }\n    }\n`\nconst DerivGoContent = ({ P2P, reverse, two_title }) => {\n    const data = useStaticQuery(query)\n    return (\n        <SectionContainer\n            p=\"8.9rem 0 8rem 0\"\n            background=\"rgba(243, 246, 250, 1)\"\n            tabletL={{ pt: '40px' }}\n        >\n            <StyledContainer>\n                {P2P.map((item, index) => {\n                    let is_even = reverse ? (index + 1) % 2 : index % 2\n                    return (\n                        <Row\n                            fd={!is_even ? 'row' : 'row-reverse'}\n                            key={index}\n                            margin_right={!is_even ? '0' : '12.6rem'}\n                        >\n                            <Content margin_right={!is_even ? '12.6rem' : '0'}>\n                                <StyledHeader as=\"h4\" type=\"heading-3\">\n                                    {item.title}\n                                </StyledHeader>\n                                <StyledText>{item.subtitle}</StyledText>\n                                {two_title && (\n                                    <>\n                                        <StyledHeader as=\"h3\" type=\"heading-3\" mt=\"2.4rem\">\n                                            {item.second_title}\n                                        </StyledHeader>\n                                        <StyledText>{item.second_subtitle}</StyledText>\n                                    </>\n                                )}\n                            </Content>\n                            <QueryImage\n                                data={data[item.image_name]}\n                                alt={item.image_alt}\n                                width=\"100%\"\n                                className=\"content-wrapper\"\n                            />\n                        </Row>\n                    )\n                })}\n            </StyledContainer>\n        </SectionContainer>\n    )\n}\n\nDerivGoContent.propTypes = {\n    P2P: PropTypes.array,\n    reverse: PropTypes.bool,\n    two_title: PropTypes.bool,\n}\n\nexport default DerivGoContent\n"],"names":["StyledContainer","styled","Container","device","Content","Flex","props","margin_right","Text","StyledHeader","Header","StyledText","Row","P2P","reverse","two_title","data","useStaticQuery","p","background","tabletL","pt","map","item","index","is_even","fd","key","as","type","title","subtitle","mt","second_title","second_subtitle","image_name","alt","image_alt","width","className"],"sourceRoot":""}