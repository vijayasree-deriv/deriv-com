{"version":3,"file":"3643-836b2bf9a0ed478e4b50.js","mappings":"yLAsBMA,GAAgBC,EAAAA,EAAAA,SAAOC,EAAAA,IAAVC,WAAA,mEAAGF,CAAH,+FAGNG,EAAAA,EAAAA,SAIPC,GAAUJ,EAAAA,EAAAA,SAAOK,EAAAA,IAAVH,WAAA,6DAAGF,CAAH,iBAGPM,EAAUN,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,oQAKO,SAACO,GAAD,OAAWA,EAAMC,gBAClB,SAACD,GAAD,OAAWA,EAAME,cAE9BC,EAAAA,GAGWP,EAAAA,EAAAA,QAOJA,EAAAA,EAAAA,SAMPQ,GAAsBX,EAAAA,EAAAA,SAAOK,EAAAA,IAAVH,WAAA,yEAAGF,CAAH,yCAEZG,EAAAA,EAAAA,SAIPS,GAAqBZ,EAAAA,EAAAA,SAAOK,EAAAA,IAAVH,WAAA,wEAAGF,CAAH,sDAEXG,EAAAA,EAAAA,SAMPU,GAAeb,EAAAA,EAAAA,SAAOc,EAAAA,IAAVZ,WAAA,kEAAGF,CAAH,yHACL,SAACO,GAAD,OAAWA,EAAMQ,SACV,SAACR,GAAD,OAAWA,EAAMC,eAExBL,EAAAA,EAAAA,QAKAA,EAAAA,EAAAA,SAIPa,GAAehB,EAAAA,EAAAA,SAAOiB,EAAAA,IAAVf,WAAA,kEAAGF,CAAH,oGAGLG,EAAAA,EAAAA,SAQPe,EAAMlB,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,+JACa,SAACO,GAAD,OAAWA,EAAMY,iBAQ1BhB,EAAAA,EAAAA,SAGAA,EAAAA,EAAAA,SACa,SAACI,GAAD,OAAWA,EAAMa,yBA+H3C,UAxDiB,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,cAAeC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,SAC3CC,GAAOC,EAAAA,EAAAA,gBArEN,cAuEP,OACIC,EAAAA,QAAAA,cAAC5B,EAAD,KACI4B,EAAAA,QAAAA,cAACvB,EAAD,CAASwB,GAAG,SAASC,GAAG,UACnBP,EAAQQ,KAAI,SAACC,EAAMC,GAChB,IAAMC,EAAUV,GAAWS,EAAQ,GAAK,EAAIA,EAAQ,EACpD,OACIL,EAAAA,QAAAA,cAACT,EAAD,CACIC,eAAiBc,EAAkB,cAAR,MAC3Bb,sBAAwBa,EAAqB,iBAAX,SAClCC,IAAKF,GAELL,EAAAA,QAAAA,cAACrB,EAAD,CACIE,aAAeyB,EAA0B,IAAhBZ,EACzBZ,YAAcwB,EAAgBZ,EAAN,KAExBM,EAAAA,QAAAA,cAACX,EAAD,CAAcmB,KAAK,iBAAiBJ,EAAKK,OACzCT,EAAAA,QAAAA,cAACjB,EAAAA,GAAD,KAAOqB,EAAKM,WAEfN,EAAKO,mBACFX,EAAAA,QAAAA,cAACd,EAAD,CAAcE,MAAOS,GAAsB,SAAUK,GAAG,UACpDF,EAAAA,QAAAA,cAAChB,EAAD,KACIgB,EAAAA,QAAAA,cAACY,EAAAA,GAAD,CACId,KAAMA,EAAKM,EAAKS,YAChBC,IAAKV,EAAKW,UACV3B,MAAM,UAGdY,EAAAA,QAAAA,cAACf,EAAD,KACIe,EAAAA,QAAAA,cAACY,EAAAA,GAAD,CACId,KAAMA,EAAKM,EAAKO,mBAChBG,IAAKV,EAAKW,UACV3B,MAAM,YAKpBgB,EAAKO,mBACHX,EAAAA,QAAAA,cAACd,EAAD,CAAcE,MAAOS,GAAsB,SAAUK,GAAG,UACpDF,EAAAA,QAAAA,cAACY,EAAAA,GAAD,CACId,KAAMA,EAAKM,EAAKS,YAChBC,IAAKV,EAAKW,UACV3B,MAAM","sources":["webpack://deriv-com/./src/pages/landing/stocks/_dtrading.tsx"],"sourcesContent":["import React, { ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport device from 'themes/device'\nimport { Container, Flex, SectionContainer } from 'components/containers'\nimport { Header, Text, QueryImage } from 'components/elements'\n\ntype ContentProps = {\n    margin_right: string\n    margin_left: string\n}\n\ntype ImageWrapperProps = {\n    width: string\n    margin_right?: string\n}\n\ntype RowProps = {\n    flex_direction: string\n    flex_direction_mobile: string\n}\n\nconst StyledSection = styled(SectionContainer)`\n    background-color: var(--color-white);\n    padding: 40px 120px;\n    @media ${device.tabletL} {\n        padding: 40px 16px 32px;\n    }\n`\nconst Wrapper = styled(Container)`\n    width: 100%;\n`\nconst Content = styled.div<ContentProps>`\n    width: 689px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-right: ${(props) => props.margin_right};\n    margin-left: ${(props) => props.margin_left};\n\n    ${Text} {\n        margin-top: 16px;\n        font-size: 24px;\n        @media ${device.tabletL} {\n            font-size: 20px;\n            text-align: center;\n            margin-top: 8px;\n        }\n    }\n\n    @media ${device.tabletL} {\n        width: 100%;\n        max-width: 58.8rem;\n        margin: 0 auto;\n    }\n`\nconst DesktopImageWrapper = styled(Container)`\n    width: 100%;\n    @media ${device.tabletL} {\n        display: none;\n    }\n`\nconst MobileImageWrapper = styled(Container)`\n    display: none;\n    @media ${device.tabletL} {\n        display: flex;\n        width: 100%;\n    }\n`\n\nconst ImageWrapper = styled(Flex)<ImageWrapperProps>`\n    width: ${(props) => props.width};\n    margin-right: ${(props) => props.margin_right};\n\n    @media ${device.tabletL} {\n        margin: 2rem auto 0;\n        max-width: 58.8rem;\n        width: 100%;\n    }\n    @media ${device.mobileL} {\n        max-width: 216px;\n    }\n`\nconst StyledHeader = styled(Header)`\n    line-height: 1.25;\n\n    @media ${device.tabletL} {\n        font-size: 40px;\n        line-height: 40px;\n        margin-top: 24px;\n        text-align: center;\n    }\n`\n\nconst Row = styled.div<RowProps>`\n    flex-direction: ${(props) => props.flex_direction};\n    width: 100%;\n    display: flex;\n    margin-top: 4rem;\n\n    &:first-child {\n        margin-top: 0;\n    }\n    @media ${device.desktopS} {\n        justify-content: center;\n    }\n    @media ${device.tabletL} {\n        flex-direction: ${(props) => props.flex_direction_mobile};\n    }\n`\nconst query = graphql`\n    query {\n        dbot_strategy: file(relativePath: { eq: \"dbot/dbot-strategy.png\" }) {\n            ...fadeIn\n        }\n        dbot_build_strategy: file(relativePath: { eq: \"dbot/dbot-build-strategy.png\" }) {\n            ...fadeIn\n        }\n        dbot_maximise_profits: file(relativePath: { eq: \"dbot/dbot-maximise-profits.png\" }) {\n            ...fadeIn\n        }\n        dbot_track_your_performance: file(\n            relativePath: { eq: \"dbot/dbot-track-your-performance.png\" }\n        ) {\n            ...fadeIn\n        }\n        dbot_get_integrated_help: file(relativePath: { eq: \"dbot/dbot-get-integrated-help.png\" }) {\n            ...fadeIn\n        }\n        dbot_save_your_strategies: file(\n            relativePath: { eq: \"dbot/dbot-save-your-strategies.png\" }\n        ) {\n            ...fadeIn\n        }\n        dmt_5_ipad_iphone: file(relativePath: { eq: \"dmt5/dmt-5-ipad-iphone.png\" }) {\n            ...fadeIn\n        }\n        dmt_5_mac: file(relativePath: { eq: \"dmt5/dmt-5-mac.png\" }) {\n            ...fadeIn\n        }\n        make_smarter: file(relativePath: { eq: \"dtrader/make-smarter.png\" }) {\n            ...fadeIn\n        }\n        trade_what_you_want: file(relativePath: { eq: \"dtrader/trade-what-you-want.png\" }) {\n            ...fadeIn\n        }\n        how_you_want: file(relativePath: { eq: \"dtrader/how-you-want.png\" }) {\n            ...fadeIn\n        }\n        stocks_zero_fees: file(relativePath: { eq: \"stock-indices/stocks-zero-fees.png\" }) {\n            ...fadeIn\n        }\n        stocks_blue_chip: file(relativePath: { eq: \"stock-indices/stocks-blue-chip.png\" }) {\n            ...fadeIn\n        }\n        stocks_blue_chip_mobile: file(\n            relativePath: { eq: \"stock-indices/stocks-blue-chip-m.png\" }\n        ) {\n            ...fadeIn\n        }\n    }\n`\n\ntype DTradingProps = {\n    contentMargin: string\n    reverse: boolean\n    setWidth: string\n    trading: TradingType[]\n}\n\ntype TradingType = {\n    title: ReactElement\n    subtitle: ReactElement\n    image_name: string\n    image_alt: string\n    image_name_mobile?: string\n}\n\nconst DTrading = ({ contentMargin, trading, reverse, setWidth }: DTradingProps) => {\n    const data = useStaticQuery(query)\n\n    return (\n        <StyledSection>\n            <Wrapper fd=\"column\" ai=\"center\">\n                {trading.map((item, index) => {\n                    const is_even = reverse ? (index + 1) % 2 : index % 2\n                    return (\n                        <Row\n                            flex_direction={!is_even ? 'row' : 'row-reverse'}\n                            flex_direction_mobile={!is_even ? 'column' : 'column-reverse'}\n                            key={index}\n                        >\n                            <Content\n                                margin_right={!is_even ? contentMargin : '0'}\n                                margin_left={!is_even ? '0' : contentMargin}\n                            >\n                                <StyledHeader type=\"display-title\">{item.title}</StyledHeader>\n                                <Text>{item.subtitle}</Text>\n                            </Content>\n                            {item.image_name_mobile && (\n                                <ImageWrapper width={setWidth ? setWidth : '448px;'} ai=\"center\">\n                                    <DesktopImageWrapper>\n                                        <QueryImage\n                                            data={data[item.image_name]}\n                                            alt={item.image_alt}\n                                            width=\"100%\"\n                                        />\n                                    </DesktopImageWrapper>\n                                    <MobileImageWrapper>\n                                        <QueryImage\n                                            data={data[item.image_name_mobile]}\n                                            alt={item.image_alt}\n                                            width=\"100%\"\n                                        />\n                                    </MobileImageWrapper>\n                                </ImageWrapper>\n                            )}\n                            {!item.image_name_mobile && (\n                                <ImageWrapper width={setWidth ? setWidth : '448px;'} ai=\"center\">\n                                    <QueryImage\n                                        data={data[item.image_name]}\n                                        alt={item.image_alt}\n                                        width=\"100%\"\n                                    />\n                                </ImageWrapper>\n                            )}\n                        </Row>\n                    )\n                })}\n            </Wrapper>\n        </StyledSection>\n    )\n}\n\nexport default DTrading\n"],"names":["StyledSection","styled","SectionContainer","withConfig","device","Wrapper","Container","Content","props","margin_right","margin_left","Text","DesktopImageWrapper","MobileImageWrapper","ImageWrapper","Flex","width","StyledHeader","Header","Row","flex_direction","flex_direction_mobile","contentMargin","trading","reverse","setWidth","data","useStaticQuery","React","fd","ai","map","item","index","is_even","key","type","title","subtitle","image_name_mobile","QueryImage","image_name","alt","image_alt"],"sourceRoot":""}